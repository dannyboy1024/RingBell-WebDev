{"version":3,"sources":["reportWebVitals.js","components/common_components/Navbar.jsx","components/TimeSlots.js","components/MatchDialog.js","components/MatchResult.js","pages/Calendar.js","components/UserInfoForms/UserInfo.js","components/UserInfoForms/BookingInfo.js","components/Galary/ListenerCard.jsx","components/Galary/Galary.jsx","components/HomeSections/HomeSections.jsx","pages/Home.js","components/AboutSections/TeamCard.jsx","components/AboutSections/AboutGalary.jsx","pages/About.js","pages/Disclaimer.js","components/common_components/FormInput.jsx","components/common_components/Form.jsx","components/Authentication/Login.jsx","components/UserInfoForms/RegisterInfo.js","components/Authentication/RegisterSuccess.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","useState","window","sessionStorage","getItem","loginStatus","setLoginStatus","handleLogout","clear","alert","location","reload","Navbar","className","bg","expand","Container","Brand","href","src","alt","Toggle","Collapse","id","Nav","Link","onClick","TimeSlots","makeStyles","theme","drawerWidth","width","backgroundColor","breakpoints","up","datePicker","position","left","top","height","timeSlots","handleTimeSlotClick","React","Date","selectedDate","setSelectedDate","dateStr","getFullYear","toString","getMonth","getDate","console","log","timeSlotsInOneDay","Array","sort","t1","t2","time","getHours","displayedSlots","slot","start","end","suffix","timeStr","push","isChosen","TimeSlotListInOneDay","map","displayedSlot","date","day","getDay","month","localDateObj","timeZoneOffset","Math","floor","getTimezoneOffset","timeZoneOffsetStr","abs","utils","DateFnsUtils","DatePicker","disablePast","disableToolbar","shouldDisableDate","orientation","variant","format","margin","label","value","onChange","length","MatchDialog","numChosenSlots","message","handleNextClick","handleSuccessDialogOkClick","show","setShow","fullWidth","maxWidth","Button","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","class","role","disabled","MatchResult","matchedListener","matchedTimeSlot","matchResultConfirmed","handleConfirmBookingClick","handleConfirmBookingDialogOkClose","handleRescheduleClick","handleCancelBookingClick","handleCancelBookingDialogOkClose","matchedDate","dateDisplayed","timeDisplayed","name","Calendar","state","loading","allDays","bellringer","dayOff","displaying","chosenSlots","matching","success","failure","confirming","confirmed","cancelled","e","timeSlotDate","target","curTimeSlots","clone","curNumChosenSlots","i","timeID","setState","rstTimeSlots","Object","entries","key","val","item","props","history","a","JSON","parse","chosenUni","matchUni","search","axios","get","resp","uniTimeSlots","data","slotSetMp","date_timeID_Mp","timeSlot","Set","uni","university","add","slotMp","this","title","body","Promise","r","setTimeout","post","response","listener","localHour","localHourStr","offsetSign","offsetSuffix","yearMonthDate","userLocaltimeStr","StylesProvider","injectFirst","Component","UserInfo","email","WID","gender","topic","extra_topic","faculty","need","extra_need","condition","extra_condition","availability","source","last_match_info","other_info","updateInputName","updateInputUniversity","updateInputEmail","updateInputWechat","updateInputGender","updateInputMatchUni","updateInputTopic","updateInputExtraTopic","updateInputFaculty","updateInputNeed","needList","updateInputCondition","updateInputExtraCondition","updateInputSource","sourceList","updateInputOtherInfo","updateInputLastMatchInfo","handleSubmit","preventDefault","setItem","stringify","showextratopic","document","getElementById","innerHTML","onSubmit","Group","controlId","Label","Control","required","type","Text","Select","Check","Want","to","be","heard","work","with","the","Others","as","rows","WeChat","tweets","and","Public","Friend","introduction","Offline","event","or","seminar","Google","searching","BookingInfo","userInfoFromLogin","ListenerCard","listenerInfo","intro","photo","details","popup","setPopup","Modal","onHide","backdrop","centered","Header","closeButton","Title","Body","Row","Col","xs","md","detail","heading","contents","content","ListenerData","require","Galary","IntroData","HomeSection_1","website_heading","website_subheading","Badge","pill","HomeSection_2","our_story_p1","our_story_p2","our_story_p3","our_story_p4","HomeSection_3","icon","service_intro","HomeSection_4","core_values","Home","galary_ref","createRef","match","params","current","scrollIntoView","ref","TeamCard","teamInfo","TeamData","member","About","AboutGalary","Disclaimer","FormInput","lable","isAutoFocus","error","rest","htmlFor","Joi","Form","errors","LoginSchema","object","string","password","RegisterSchema","Schema","formType","validate","path","validateChange","targetName","targetValue","keys","doSubmit","handleChange","input","currentTarget","placeholder","loginURL","Login","storeLoginSession","token","userInfo","toHomePage","catch","statusCode","status","toRegisterPage","renderInput","renderSubmitBtn","registerURL","RegisterInfo","updateInputPassword","createUser","info","RegisterSuccess","username","App","component","library","far","fas","fab","ReactDOM","render","StrictMode"],"mappings":"qogBAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4HC6CCQ,MA/Cf,WACE,MAAsCC,mBAASC,OAAOC,eAAeC,QAAQ,YAAc,MAAQ,MAAnG,mBAAOC,EAAP,KAAoBC,EAApB,KAkBMC,EAAe,WACnBL,OAAOC,eAAeK,QACtBC,MAAM,uBACNH,EAAe,MACfJ,OAAOQ,SAASC,QAAO,IAGzB,OACE,cAACC,EAAA,EAAD,CAAQC,UAAU,WAAWC,GAAG,QAAQC,OAAO,KAA/C,SACE,eAACC,EAAA,EAAD,CAAWH,UAAU,gBAArB,UACE,cAACD,EAAA,EAAOK,MAAR,CAAcJ,UAAU,WAAWK,KAAK,IAAxC,SACE,qBAAKL,UAAU,WAAWM,IAAI,qBAAqBC,IAAI,WAEzD,cAACR,EAAA,EAAOS,OAAR,CAAe,gBAAc,qBAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,UACE,eAACC,EAAA,EAAD,CAAKX,UAAU,UAAf,UACE,cAACW,EAAA,EAAIC,KAAL,CAAUP,KAAK,IAAf,kBACA,cAACM,EAAA,EAAIC,KAAL,CAAUP,KAAK,SAAf,mBACA,cAACM,EAAA,EAAIC,KAAL,CAAUP,KAAK,UAAf,2BACA,cAACM,EAAA,EAAIC,KAAL,CAAUP,KAAK,YAAf,+BAEF,cAACM,EAAA,EAAD,UApCFnB,EAEA,cAACmB,EAAA,EAAIC,KAAL,CAAUC,QAASnB,EAAcM,UAAU,UAA3C,oBAMA,cAACW,EAAA,EAAIC,KAAL,CAAUP,KAAK,SAASL,UAAU,UAAlC,uC,qGC6GOc,GA9GGC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAY,aACVC,MAAO,MACPC,gBAAiB,UAChBH,EAAMI,YAAYC,GAAG,KAAO,CAC3BH,MAAO,QAGXI,WAAY,CACRH,gBAAiB,UACjBI,SAAU,WACVC,KAAM,KACNC,IAAK,KACLP,MAAO,MACPQ,OAAQ,WAIE,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAUC,EAAyB,EAAzBA,oBAG1B,EAAwCC,IAAMzC,SAC1C,IAAI0C,MADR,mBAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAUF,EAAaG,cAAcC,WAAW,KAAKJ,EAAaK,WAAW,GAAGD,WAAW,IAAIJ,EAAaM,UAAUF,WAC5HG,QAAQC,IAAKN,GAEb,IAAMO,EAAqBP,KAAWN,EAAaA,EAAUM,GAAWQ,QACxED,EAAkBE,MAAK,SAASC,EAAIC,GAChC,OAAQ,IAAId,KAAKa,EAAGE,MAAOC,WAAc,IAAIhB,KAAKc,EAAGC,MAAOC,cAEhER,QAAQC,IAAI,yBAA0BC,GAGtC,IApBmD,EAoB/CO,EAAiBN,QApB8B,cAqBhCD,GArBgC,IAqBnD,2BAAsC,CAAC,IAA5BQ,EAA2B,QAE9BC,EADY,IAAInB,KAAKkB,EAAKH,MACVC,WAChBI,GAAOD,EAAM,GAAG,GACdE,EAASD,EAAI,GAAK,KAAO,KAE/BA,GAAOA,EAAI,GAAK,GAAK,EACrB,IAAME,GAFNH,GAASA,EAAM,GAAK,GAAK,GAEHd,WAAW,OAAOe,EAAIf,WAAW,OAAOgB,EAC9DJ,EAAeM,KAAK,CAACR,KAAOO,EAAS1C,GAAKsC,EAAKH,KAAMS,SAAWN,EAAKM,YA7BtB,8BAiCnD,IAAMC,EAAuBR,EAAeS,KAAI,SAAAC,GAC5C,OAEI,aADA,CACA,UAAQzD,UAAWyD,EAAcH,SAAS,iBAAiB,WAAY5C,GAAI+C,EAAc/C,GAA2BG,QAASe,EAA7H,SAAmJ6B,EAAcZ,MAA/DY,EAAc/C,OAYlHgD,EAAO3B,EAAaM,UACpBsB,EAHO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAGzD5B,EAAa6B,UACxBC,EAHS,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAG9F9B,EAAaK,YAC5B0B,EAAe,IAAIhC,KACnBiC,EAAiBC,KAAKC,MAAMH,EAAaI,oBAAsB,IAE/DC,EAAoB,MAAyB,IAAjBJ,EAAqB,MAAS,QAD7CA,GAAgB,EAAI,IAAM,KACyCC,KAAKI,IAAIL,GAAgB5B,WAAa,OAAU,IAEtI,OACI,gCACA,sBAAKnC,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,IAAD,CAAyBqE,MAAOC,IAAhC,SACI,cAACC,EAAA,EAAD,CACAC,aAAW,EACXC,gBAAc,EACdC,kBAxBI,SAAChB,GAGjB,OADiBM,KAAKC,OAAOP,EAAO,IAAI5B,MAAZ,QAA0C,GAuB1D6C,YAAc,WACdC,QAAU,SACVC,OAAS,aACTC,OAAS,SACTpE,GAAK,cACLqE,MAAQ,cACRC,MAASjD,EACTkD,SAlES,SAACvB,GACtB1B,EAAgB0B,UAqEZ,sBAAK1D,UAAU,wBAAf,UACI,qBAAKA,UAAU,gBAAf,SAAgC2D,EAAI,KAAKE,EAAM,IAAIH,EAAKvB,WAAWgC,IACnE,qBAAKnE,UAAW+C,EAAemC,OAAO,EAAE,kBAAkB,sBAA1D,SACKnC,EAAemC,OAAO,EAAI3B,EAAuB,yDAK9D,qBAAKvD,UAAU,eAAf,qG,8DCpDOmF,EApDK,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,eAAeC,EAAwD,EAAxDA,QAAQC,EAAgD,EAAhDA,gBAAgBC,EAAgC,EAAhCA,2BACzD,EAAwB1D,IAAMzC,UAAS,GAAvC,mBAAOoG,EAAP,KAAaC,EAAb,KACA,EAAkC5D,IAAMzC,UAAS,GAAjD,mBAAOsG,EAAP,KACA,GADA,KACgC7D,IAAMzC,SAAS,OAA/C,mBAAOuG,EAAP,UAUA,OADArD,QAAQC,IAAI,0BAA2B6C,GAEnC,8BACMA,EAAe,EACb,gCACI,cAACQ,EAAA,EAAD,CAAQ5F,UAAU,OAAO4E,QAAQ,OAAO/D,QAb/B,WACrByE,IACAG,GAAQ,IAWI,oBACA,eAACI,EAAA,EAAD,CAAQC,KAAMN,EAAME,UAAWA,EAAWC,SAAUA,EAApD,UACI,cAACI,EAAA,EAAD,CAAarF,GAAG,0BAAhB,SACK2E,IAGS,sBAAVA,EACA,gCACI,cAACW,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,uDAIJ,cAACC,EAAA,EAAD,UACI,cAACN,EAAA,EAAD,CAAQO,WAAS,EAACtF,QAvBf,WAC/B0E,IACAE,GAAQ,IAqBoB,uBAGR,qBAAKzF,UAAU,6BAAf,SACI,qBAAKoG,MAAM,cAAX,SACI,qBAAKA,MAAM,8BAA8BC,KAAK,SAA9C,SACI,sBAAMD,MAAM,kBAAZ,oCAOxB,8BACI,cAACR,EAAA,EAAD,CAAQ5F,UAAY,eAAe4E,QAAQ,YAAY0B,UAAQ,EAA/D,uBC6CLC,EA1FK,SAAC,GAAwM,IAAvMC,EAAsM,EAAtMA,gBAAgBC,EAAsL,EAAtLA,gBAAgBC,EAAsK,EAAtKA,qBAAqBC,EAAiJ,EAAjJA,0BAA0BC,EAAuH,EAAvHA,kCAAkCC,EAAqF,EAArFA,sBAAsBC,EAA+D,EAA/DA,yBAAyBC,EAAsC,EAAtCA,iCAClL,EAAwBlF,IAAMzC,UAAS,GAAvC,mBAAOoG,EAAP,KAAaC,EAAb,KACA,EAAkC5D,IAAMzC,UAAS,GAAjD,mBAAOsG,EAAP,KACA,GADA,KACgC7D,IAAMzC,SAAS,OAA/C,mBAAOuG,EAAP,KA4BMqB,GA5BN,KA4BoB,IAAIlF,KAAK2E,IAKvBQ,EAPO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAGzDD,EAAYpD,UAIH,KANX,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAG9FoD,EAAY5E,YAGI,IAFxB4E,EAAY3E,UAAUF,WAEW,KADjC6E,EAAY9E,cAAcC,WAEnCc,EAAQ+D,EAAYlE,WACpBI,GAAOD,EAAM,GAAG,GACdE,EAASD,EAAI,GAAK,KAAO,KAC/BD,GAASA,EAAM,GAAK,GAAK,EACzBC,GAAOA,EAAI,GAAK,GAAK,EACrB,IAAMY,EAAe,IAAIhC,KACnBiC,EAAiBC,KAAKC,MAAMH,EAAaI,oBAAsB,IAE/DC,EAAoB,MAAyB,IAAjBJ,EAAqB,MAAS,QAD7CA,GAAgB,EAAI,IAAM,KACyCC,KAAKI,IAAIL,GAAgB5B,WAAa,OAAU,IAChI+E,EAAgBjE,EAAMd,WAAW,OAAOe,EAAIf,WAAW,OAAOgB,EAAOgB,EAC3E,OACI,sBAAKnE,UAAY,cAAjB,UACI,qBAAIA,UAAY,mBAAhB,UACI,mBAAGoG,MAAM,8BACT,6BAAKa,IACL,6BAAKC,IACL,mBAAGd,MAAM,sBACT,6BAAKI,EAAgBW,UAEzB,qBAAKnH,UAAY,yBAAjB,SACI,sBAAKA,UAAY,gCAAjB,UACA,cAAC4F,EAAA,EAAD,CAAQ5F,UAAU,aAAa4E,QAAQ,OAAO/D,QA5C3B,WAC3BgG,IACApB,GAAQ,IA0CA,wBACA,cAACG,EAAA,EAAD,CAAQ5F,UAAU,iBAAiB4E,QAAQ,OAAO/D,QAxC5B,WAC9BiG,IACArB,GAAQ,IAsCA,oBACA,cAACG,EAAA,EAAD,CAAQ5F,UAAU,UAAU4E,QAAQ,OAAO/D,QAvDpB,WAC/B8F,IACAlB,GAAQ,IAqDA,iCACA,eAACI,EAAA,EAAD,CAAQC,KAAMN,EAAME,UAAWA,EAAWC,SAAUA,EAApD,UACI,cAACI,EAAA,EAAD,CAAarF,GAAG,0BAAhB,SAEQgG,EACA,iCACA,2BAGR,cAACV,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAEQS,EACA,mFACA,uCAIZ,cAACR,EAAA,EAAD,UACI,cAACN,EAAA,EAAD,CAAQO,WAAS,EAACtF,QAAS6F,EAtEN,WACrCE,IACAnB,GAAQ,IAY4B,WACpCsB,IACAtB,GAAQ,IAsDQ,gC,kBCgNT2B,E,4MA9RbC,MAAQ,CAENC,SAAS,EACT3F,UAAW,GACX4F,QAAS,GACTC,WAAY,GACZC,OAAQ,EAERC,YAAY,EACZtC,eAAgB,EAChBuC,YAAa,GAEbC,UAAU,EACVpB,gBAAiB,GACjBC,gBAAiB,GAEjBoB,SAAS,EAETC,SAAS,EAETC,YAAY,EAEZC,WAAW,EAEXC,WAAW,G,EAqJbrG,oBAAsB,SAACsG,GAOrB,IAJA,IAAMC,EAAe,IAAIrG,KAAKoG,EAAEE,OAAO1H,IACjCuB,EAAUkG,EAAajG,cAAcC,WAAW,KAAKgG,EAAa/F,WAAW,GAAGD,WAAW,IAAIgG,EAAa9F,UAAUF,WACxHkG,EAAeC,gBAAM,EAAKjB,MAAM1F,WAChC4G,EAAoB,EAAKlB,MAAMjC,eAC1BoD,EAAE,EAAGA,EAAEH,EAAapG,GAASiD,OAAQsD,IAAK,CACjD,IAAMxF,EAAOqF,EAAapG,GAASuG,GACnC,GAAIxF,EAAKH,OAASqF,EAAEE,OAAO1H,GAAI,CAC7B6H,GAAqBvF,EAAKM,UAAY,EAAI,EAC1C+E,EAAapG,GAASuG,GAAK,CAAC3F,KAAOG,EAAKH,KAAM4F,OAASzF,EAAKyF,OAAQnF,UAAYN,EAAKM,UACrF,OAGJ,EAAKoF,SAAS,CACZ/G,UAAY0G,EACZjD,eAAiBmD,K,EAGrBjD,gBAAkB,SAAC4C,GACjB,EAAKQ,SAAS,CACZhB,YAAa,EACbE,UAAU,K,EAGdrC,2BAA6B,SAAC2C,GAC5B,EAAKQ,SAAS,CACZb,SAAU,EACVE,YAAa,K,EAGjBpB,0BAA4B,SAACuB,GAC3B,EAAKQ,SAAS,CACZX,YAAY,EACZC,WAAW,K,EAGfnB,sBAAwB,SAACqB,GAGvB,IADA,IAAIS,EAAe,GACnB,MAAwBC,OAAOC,QAAQ,EAAKxB,MAAM1F,WAAlD,eAA8D,CAAzD,0BAAOmH,EAAP,KAAWC,EAAX,KACHJ,EAAaG,GAAO,IAAIrG,MACxB,IAAK,IAAI+F,EAAE,EAAGA,EAAEO,EAAI7D,OAAQsD,IAAK,CAC/B,IAAIQ,EAAOD,EAAIP,GACfQ,EAAK1F,UAAW,EAChBqF,EAAaG,GAAKzF,KAAK2F,IAG3B,EAAKN,SAAS,CACZX,YAAY,EACZL,YAAY,EACZ/F,UAAWgH,EACXvD,eAAgB,K,EAGpB0B,yBAA2B,SAACoB,GAC1B,EAAKQ,SAAS,CACZX,YAAY,EACZE,WAAW,K,EAGflB,iCAAmC,SAACmB,GAClC,EAAKe,MAAMC,QAAQ7F,KAAK,e,EAE1BuD,kCAAoC,SAACsB,GACnC,EAAKe,MAAMC,QAAQ7F,KAAK,e,8FApN1B,kEAAA8F,EAAA,6DAGE7G,QAAQC,IAAI,kBAAmB6G,KAAKC,MAAMhK,OAAOC,eAAeC,QAAQ,qBAClE+J,GAAuG,IAA3FF,KAAKC,MAAMhK,OAAOC,eAAeC,QAAQ,oBAAoBgK,SAASC,OAAO,WAAkB,OAAS,UAG1HlH,QAAQC,IAAI,6DACA,sEARd,SASqBkH,IAAMC,IADb,uEARd,OASQC,EATR,OAUMC,EAAeD,EAAKE,KAAKA,KAK7BvH,QAAQC,IAAIqH,GAGRE,EAAY,GACZC,EAAiB,GAnBvB,cAoByBH,GApBzB,IAoBE,2BAAWI,EAA0B,QAC7B7B,EAAe,IAAIrG,KAAKkI,EAAStG,OACjCzB,EAAUkG,EAAajG,cAAcC,WAAW,KAAKgG,EAAa/F,WAAW,GAAGD,WAAW,IAAIgG,EAAa9F,UAAUF,cAC1G2H,IAChBA,EAAU7H,GAAW,IAAIgI,KAGrBC,GAA+C,IAAzCF,EAASG,WAAWX,OAAO,WAAkB,OAAS,UAC9DF,IAAcY,IAChBJ,EAAU7H,GAASmI,IAAIJ,EAAStG,MAChCqG,EAAeC,EAAStG,MAAQsG,EAASvB,QA9B/C,8BAkCE,IADI4B,EAAS,GACb,MAAwBzB,OAAOC,QAAQiB,GAAvC,eAAmD,CAAC,EAAD,oBAAvChB,EAAuC,KAAnCC,EAAmC,KACjDsB,EAAOvB,GAAO,IAAIrG,MAD+B,cAE9BsG,GAF8B,IAEjD,2BAAWC,EAAa,QACtB1G,QAAQC,IAAI,oBAAqByG,EAAMe,EAAef,IACtDqB,EAAOvB,GAAKzF,KAAK,CAACR,KAAMmG,EAAMP,OAAQsB,EAAef,GAAO1F,UAAU,IAJvB,+BAOnDhB,QAAQC,IAAI,WAAY8H,GAExBC,KAAK5B,SAAS,CACZpB,SAAS,EACTI,YAAY,EACZF,WAAY4B,KAAKC,MAAMhK,OAAOC,eAAeC,QAAQ,oBACrDoC,UAAW0I,IAEb/H,QAAQC,IAAI+H,KAAKjD,MAAM1F,WACvBW,QAAQC,IAAI+H,KAAKjD,MAAMG,YAlDzB,iD,6HAqDA,iFAAA2B,EAAA,0DACMmB,KAAKjD,MAAMK,WADjB,uBAEIpF,QAAQC,IAAI,qBAFhB,8BAKM+H,KAAKjD,MAAMO,SALjB,iBAQI,IADID,EAAclF,QAClB,MAAwBmG,OAAOC,QAAQyB,KAAKjD,MAAM1F,WAAlD,eAA8D,CAAC,EAAD,yBAA9CoH,EAA8C,mBACzCA,GADyC,IAC5D,4BAAWC,EAAa,SACb1F,UACPqE,EAAYtE,KAAK,CAAC,KAAQ2F,EAAKnG,KAAM,OAAUmG,EAAKP,SAHI,+BARlE,OAeInG,QAAQC,IAAI,CACVgI,MAAO,4BACPC,KAAM7C,IAjBZ,SAqBU,IAAI8C,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,QArBzC,aAuBgB,+DACZjB,IAAMmB,KADM,+DACI,CACdL,MAAO,4BACPC,KAAM7C,IACL9I,MAAM,SAAAgM,GAAQ,OAAI,EAAKnC,SAAS,CAC/Bd,UAAW,EACXC,SAAU,EACVrB,gBAAkBqE,EAAShB,KAAKA,KAAKiB,SACrCrE,gBAAkBoE,EAAShB,KAAKA,KAAKG,cA/B7C,+BAoCMM,KAAKjD,MAAMQ,QApCjB,wBAqCIvF,QAAQC,IAAI,6BACZD,QAAQC,IAAI+H,KAAKjD,MAAMb,iBACvBlE,QAAQC,IAAI+H,KAAKjD,MAAMZ,iBACvBnE,QAAQC,IAAI+H,KAAKjD,MAAMG,YAEvBlF,QAAQC,IAAI,6DACNuB,EAAe,IAAIhC,KAAKwI,KAAKjD,MAAMZ,iBACnCsE,EAAYjH,EAAahB,WAEzBkI,GADYD,GAAW,GAAKA,EAAaA,EAAU,IAC1B5I,WAAa,OAAS4I,GAAW,GAAK,KAAO,MACtEhH,EAAiBC,KAAKC,MAAMH,EAAaI,oBAAsB,IAC/D+G,EAAalH,EAAiB,EAAI,IAAM,IACxCmH,EAAgC,IAAjBnH,EAAqB,OAAU,QAAUkH,EAAajH,KAAKI,IAAIL,GAAgB5B,WAAa,MAC3GgJ,EAAgBrH,EAAa5B,cAAcC,WAAW,KAAK2B,EAAa1B,WAAW,GAAGD,WAAW,IAAI2B,EAAazB,UAAUF,WAAW,IACvIiJ,EAAmBD,EAAgBH,EAAeE,EACxD5I,QAAQC,IAAI,4CAA6C6I,GApD7D,+BAwDMd,KAAKjD,MAAMU,WAxDjB,wBAyDIzF,QAAQC,IAAI,sCAzDhB,2BA4DM+H,KAAKjD,MAAMW,YAEb1F,QAAQC,IAAI,6DACNuB,EAAe,IAAIhC,KAAKwI,KAAKjD,MAAMZ,iBACnCsE,EAAYjH,EAAahB,WAEzBkI,GADYD,GAAW,GAAKA,EAAaA,EAAU,IAC1B5I,WAAa,OAAS4I,GAAW,GAAK,KAAO,MACtEhH,EAAiBC,KAAKC,MAAMH,EAAaI,oBAAsB,IAC/D+G,EAAalH,EAAiB,EAAI,IAAM,IACxCmH,EAAgC,IAAjBnH,EAAqB,QAAW,QAAUkH,EAAajH,KAAKI,IAAIL,GAAgB5B,WAAa,MAC5GgJ,EAAgBrH,EAAa5B,cAAcC,WAAW,KAAK2B,EAAa1B,WAAW,GAAGD,WAAW,IAAI2B,EAAazB,UAAUF,WAAW,IACvIiJ,EAAmBD,EAAgBH,EAAeE,EACxD5I,QAAQC,IAAI,sCAAuC6I,GAEnD9I,QAAQC,IAAI,2CACA,mEACZD,QAAQC,IACN,CAAE,SAAa+H,KAAKjD,MAAMZ,gBACxB,SAAa6D,KAAKjD,MAAMb,gBACxB,WAAe8D,KAAKjD,MAAMG,WAC1B,UAAc4D,IAElB3B,IAAMmB,KAPM,mEAOI,CACdL,MAAO,2CACPC,KAAM,CAAC,SAAaF,KAAKjD,MAAMZ,gBACxB,SAAa6D,KAAKjD,MAAMb,gBACxB,WAAe8D,KAAKjD,MAAMG,WAC1B,UAAc4D,KAEpBvM,MAAM,SAAAgM,GAAQ,OAAIvI,QAAQC,IAAIsI,EAAShB,UAzF9C,iD,0EAiKA,WACE,OACES,KAAKjD,MAAMC,QACT,qBAAKtH,UAAU,oBAAf,SACE,qBAAKoG,MAAM,cAAX,SACE,qBAAKA,MAAM,8BAA8BC,KAAK,SAA9C,SACI,sBAAMD,MAAM,kBAAZ,8BAIR,cAACiF,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACA,sBAAKtL,UAAU,qBAAf,UAEIsK,KAAKjD,MAAMK,WACX,gCACE,qBAAK1H,UAAU,eAAf,oDACA,cAAC,EAAD,CAAW2B,UAAW2I,KAAKjD,MAAM1F,UAAWC,oBAAqB0I,KAAK1I,yBAExE0I,KAAKjD,MAAMU,YAAcuC,KAAKjD,MAAMW,WAAasC,KAAKjD,MAAMY,UAC5D,gCACE,qBAAKjI,UAAU,eAAf,oDACA,qBAAKA,UAAU,cAAf,SAA8B,qCAAuCsK,KAAKjD,MAAMG,WAAWL,OAC3F,cAAC,EAAD,CAAaX,gBAAiB8D,KAAKjD,MAAMb,gBAC5BC,gBAAiB6D,KAAKjD,MAAMZ,gBAC5BC,qBAAsB4D,KAAKjD,MAAMW,UACjCrB,0BAA2B2D,KAAK3D,0BAChCE,sBAAuByD,KAAKzD,sBAC5BC,yBAA0BwD,KAAKxD,yBAC/BC,iCAAkCuD,KAAKvD,iCACvCH,kCAAmC0D,KAAK1D,uCAEvD,wBAIA0D,KAAKjD,MAAMK,YAAY4C,KAAKjD,MAAMO,UAAU0C,KAAKjD,MAAMQ,QACvD,cAAC,EAAD,CAAazC,eAAgBkF,KAAKjD,MAAMjC,eAAgBC,QAASiF,KAAKjD,MAAMQ,QAAQ,oBAAoB,0BAA2BvC,gBAAiBgF,KAAKhF,gBAAgBC,2BAA4B+E,KAAK/E,6BAC1M,iC,GAvRWgG,a,OCqXRC,G,mNA7XbnE,MAAQ,CACNF,KAAM,GACNsE,MAAO,GACPtB,WAAY,GACZuB,IAAK,GACLC,OAAQ,GACRpC,SAAU,wBACVqC,MAAO,GACPC,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,WAAY,GACZC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,OAAQ,GACRC,gBAAiB,GACjBC,WAAY,I,EAGdC,gBAAkB,SAACrE,GAEjB,EAAKQ,SAAS,CACZvB,KAAMe,EAAEE,OAAOpD,S,EAKnBwH,sBAAwB,SAACtE,GAEvB,EAAKQ,SAAS,CACZyB,WAAYjC,EAAEE,OAAOpD,S,EAIzByH,iBAAmB,SAACvE,GAClB,EAAKQ,SAAS,CACZ+C,MAAOvD,EAAEE,OAAOpD,S,EAIpB0H,kBAAoB,SAACxE,GACnB,EAAKQ,SAAS,CACZgD,IAAKxD,EAAEE,OAAOpD,S,EAIlB2H,kBAAoB,SAACzE,GACnB,EAAKQ,SAAS,CACZiD,OAAQzD,EAAEE,OAAOpD,S,EAIrB4H,oBAAsB,SAAC1E,GACrB,EAAKQ,SAAS,CACZa,SAAUrB,EAAEE,OAAOpD,S,EAIvB6H,iBAAmB,SAAC3E,GAClB,EAAKQ,SAAS,CACZkD,MAAO1D,EAAEE,OAAOpD,S,EAIpB8H,sBAAwB,SAAC5E,GACvB,EAAKQ,SAAS,CACZmD,YAAa3D,EAAEE,OAAOpD,S,EAI1B+H,mBAAqB,SAAC7E,GACpB,EAAKQ,SAAS,CACZoD,QAAS5D,EAAEE,OAAOpD,S,EAItBgI,gBAAkB,SAAC9E,GACjB,IAAI+E,EAAW,EAAK5F,MAAM0E,KAC1BkB,EAAS5J,KAAK6E,EAAEE,OAAOpD,OACvB,EAAK0D,SAAS,CACZqD,KAAMkB,K,EAIVC,qBAAuB,SAAChF,GAEtB,EAAKQ,SAAS,CACZuD,UAAW/D,EAAEE,OAAOpD,S,EAIxBmI,0BAA4B,SAACjF,GAC3B,EAAKQ,SAAS,CACZwD,gBAAiBhE,EAAEE,OAAOpD,S,EAI9BoI,kBAAoB,SAAClF,GACnB,IAAImF,EAAa,EAAKhG,MAAM+E,OAC5BiB,EAAWhK,KAAK6E,EAAEE,OAAOpD,OACzB,EAAK0D,SAAS,CACZ0D,OAAQiB,K,EAIZC,qBAAuB,SAACpF,GACtB,EAAKQ,SAAS,CACZ4D,WAAYpE,EAAEE,OAAOpD,S,EAIzBuI,yBAA2B,SAACrF,GAC1B,EAAKQ,SAAS,CACZ2D,gBAAiBnE,EAAEE,OAAOpD,S,EAI9BwI,aAAe,SAACtF,GACdA,EAAEuF,iBACFnL,QAAQC,IAAI,sBAGZlD,OAAOC,eAAeoO,QAAQ,kBAC5BtE,KAAKuE,UAAU,CACb,MAAS,EAAKtG,MAAMoE,MACpB,KAAQ,EAAKpE,MAAMF,KACnB,SAAY,EAAKE,MAAMkC,YAK3B,EAAKN,MAAMC,QAAQ7F,KAAK,gB,EAG1BuK,eAAiB,SAACzG,GAChBA,EAAKsG,iBACYI,SAASC,eAAe,QAAQC,UAAxC,SAAN5G,EAAwD,sSACZ,I,4CAGjD,WAAU,IAAD,OACP,OACE,gCACE,sBAAKf,MAAM,OAAX,UACE,qBAAKA,MAAM,YAAY9F,IAAI,aAAaC,IAAI,uBAC5C,oBAAG6F,MAAM,YAAT,cAAsB,2CAAa,mBAAG/F,KAAK,8CAAR,iCACnC,oBAAG+F,MAAM,YAAT,cAAsB,4CAAc,mBAAG/F,KAAK,sDAAR,sCACpC,oBAAG+F,MAAM,YAAT,cAAsB,wEAKxB,eAAC,IAAD,CAAM4H,SAAU1D,KAAKkD,aAAcxN,UAAU,gBAAgBoG,MAAM,QAAnE,UACE,oBAAIA,MAAM,gCAAV,mCAEA,oBAAGA,MAAM,mBAAT,cAA6B,uNAC7B,mBAAGA,MAAM,cAAT,sGACA,oBAAGA,MAAM,mBAAT,cAA6B,6GAA+E,mBAAG/F,KAAK,qBAAR,mCAE5G,eAAC,IAAK4N,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,uCACZ,cAAC,IAAKC,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMF,KAAMlC,SAAUqF,KAAKiC,kBACjF,cAAC,IAAKgC,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,8CACZ,cAAC,IAAKC,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM8C,WAAYlF,SAAUqF,KAAKkC,wBACvF,cAAC,IAAK+B,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,wCACZ,cAAC,IAAKC,QAAN,CAAcC,SAAS,OAAOC,KAAK,QAAQtJ,MAAOsF,KAAKjD,MAAMoE,MAAOxG,SAAUqF,KAAKmC,mBACnF,cAAC,IAAK8B,KAAN,CAAWvO,UAAU,aAArB,0HAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,4CACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMqE,IAAKzG,SAAUqF,KAAKoC,oBAChE,cAAC,IAAK6B,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yCACZ,eAAC,IAAKK,OAAN,CAAaxJ,MAAOsF,KAAKjD,MAAMsE,OAAQ1G,SAAUqF,KAAKqC,kBAAtD,UACE,wBAAQ3H,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,8BAKJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,wFACZ,eAAC,IAAKK,OAAN,CAAaH,SAAS,OAAOrJ,MAAOsF,KAAKjD,MAAMkC,SAAUtE,SAAUqF,KAAKsC,oBAAxE,UAEE,wBAAQ5H,MAAM,wBAAd,mCACA,wBAAQA,MAAM,qBAAd,sCAIJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,uEACZ,6NACA,eAAC,IAAKK,OAAN,CAAaH,SAAS,OAAOrJ,MAAOsF,KAAKjD,MAAMuE,MAAO3G,SAAUqF,KAAKuC,iBAArE,UACE,wBAAQ7H,MAAM,sBAAd,iCACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,oBAAd,gCACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,QAAd,yBAIJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yHACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMwE,YAAa5G,SAAUqF,KAAKwC,2BAG1E,eAAC,IAAKmB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,sDADd,IACsD,uBACpD,cAAC,IAAKA,MAAN,2IACA,cAAC,IAAKC,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMyE,QAAS7G,SAAUqF,KAAKyC,wBAGtF,eAAC,IAAKkB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,oFACX,CAAC,YAAY3K,KAAI,SAAC8K,GAAD,aAChB,sBAA6BtO,UAAU,OAAvC,UACE,cAAC,IAAKyO,MAAN,CACEC,MAAI,EAACC,IAAE,EAACC,IAAE,EAACC,OAAK,EAChBP,KAAMA,EACN5N,GAAI,EACJqE,MAAO,mBACPC,MAAO,EAAKqC,MAAM0E,KAClB9G,SAAU,EAAK+H,kBAGjB,cAAC,IAAKyB,OAAN,GACEC,MAAI,EAACC,IAAE,EAACG,MAAI,EAACC,MAAI,EAACC,KAAG,EAAClE,UAAQ,GADhC,uJAEQwD,GAFR,sBAGS,gEAHT,mBAIM,GAJN,sBAKS,EAAKjH,MAAM0E,MALpB,yBAMY,EAAKiB,iBANjB,IASA,cAAC,IAAKyB,MAAN,CACEQ,QAAM,EACNX,KAAMA,EACNvJ,MAAO,SACPrE,GAAI,EACJsE,MAAO,EAAKqC,MAAM0E,KAClB9G,SAAU,EAAK+H,oBAzBnB,kBAAqBsB,UA+BzB,eAAC,IAAKL,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yHACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM2E,WAAY/G,SAAUqF,KAAKwC,2BAIzE,eAAC,IAAKmB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,qEACZ,qFAEA,eAAC,IAAKK,OAAN,CAAaH,SAAS,OAAOrJ,MAAOsF,KAAKjD,MAAM4E,UAAWhH,SAAUqF,KAAK4C,qBAAzE,UACE,wBAAQlI,MAAM,IAAd,iDACA,wBAAQA,MAAM,IAAd,kHACA,wBAAQA,MAAM,IAAd,gFACA,wBAAQA,MAAM,IAAd,sFACA,wBAAQA,MAAM,IAAd,mFACA,wBAAQA,MAAM,IAAd,iDACA,wBAAQA,MAAM,IAAd,0BAIJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,gIACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM6E,gBAAiBjH,SAAUqF,KAAK6C,+BAG9E,eAAC,IAAKc,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,+BAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,wGACZ,4NACA,cAAC,IAAKC,QAAN,CAAcc,GAAG,WAAWC,KAAM,EAAGnK,MAAOsF,KAAKjD,MAAMiF,WAAYrH,SAAUqF,KAAKgD,0BAGpF,eAAC,IAAKW,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,oLADd,IACoL,uBAClL,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMgF,gBAAiBpH,SAAUqF,KAAKiD,8BAG9E,eAAC,IAAKU,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yGACX,CAAC,YAAY3K,KAAI,SAAC8K,GAAD,OAChB,sBAA6BtO,UAAU,OAAvC,UACE,cAAC,IAAKyO,MAAN,CACEW,QAAM,EAACC,QAAM,EAACC,KAAG,EAACC,QAAM,EACxBjB,KAAMA,EACN5N,GAAE,kBAAa4N,GACfvJ,MAAO,yBACPC,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEe,QAAM,EAACC,cAAY,EACnBnB,KAAMA,EACNvJ,MAAO,wBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEiB,SAAO,EAACC,OAAK,EAACC,IAAE,EAACC,SAAO,EACxBvB,KAAMA,EACNvJ,MAAO,2BACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEqB,QAAM,EAACC,WAAS,EAChBzB,KAAMA,EACNvJ,MAAO,mBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEQ,QAAM,EACNX,KAAMA,EACNvJ,MAAO,SACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,sBA3CnB,kBAAqBkB,UAiDzB,uBACA,mBAAGlI,MAAM,+BAAT,SACE,0XAWF,cAACR,EAAA,EAAD,CAAQhB,QAAQ,UAAU0J,KAAK,SAA/B,8B,GApXa/C,cCkRRyE,E,4MAjRX3I,MAAQ,CACJF,KAAM,GACNsE,MAAO,GACPtB,WAAY,GACZuB,IAAK,GACLC,OAAQ,GACRpC,SAAU,wBACVqC,MAAO,GACPC,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,WAAY,GACZC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,OAAQ,GACRC,gBAAiB,GACjBC,WAAY,I,EAGhBM,oBAAsB,SAAC1E,GACnB,EAAKQ,SAAS,CACVa,SAAUrB,EAAEE,OAAOpD,S,EAI3B8H,sBAAwB,SAAC5E,GACrB,EAAKQ,SAAS,CACVmD,YAAa3D,EAAEE,OAAOpD,S,EAI9BgI,gBAAkB,SAAC9E,GACf,IAAI+E,EAAW,EAAK5F,MAAM0E,KAC1BkB,EAAS5J,KAAK6E,EAAEE,OAAOpD,OACvB,EAAK0D,SAAS,CACVqD,KAAMkB,K,EAIdC,qBAAuB,SAAChF,GAEpB,EAAKQ,SAAS,CACVuD,UAAW/D,EAAEE,OAAOpD,S,EAI5BmI,0BAA4B,SAACjF,GACzB,EAAKQ,SAAS,CACVwD,gBAAiBhE,EAAEE,OAAOpD,S,EAIlCsI,qBAAuB,SAACpF,GACpB,EAAKQ,SAAS,CACV4D,WAAYpE,EAAEE,OAAOpD,S,EAI7BuI,yBAA2B,SAACrF,GACxB,EAAKQ,SAAS,CACV2D,gBAAiBnE,EAAEE,OAAOpD,S,EAIlCwI,aAAe,SAACtF,GACZA,EAAEuF,iBAEF,IAAMwC,EAAoB7G,KAAKC,MAAMhK,OAAOC,eAAeC,QAAQ,aAGnEF,OAAOC,eAAeoO,QAAQ,kBAC1BtE,KAAKuE,UAAU,CACX,MAASsC,EAAkBxE,MAC3B,KAAQwE,EAAkB9I,KAC1B,SAAY,EAAKE,MAAMkC,YAI/B,EAAKN,MAAMC,QAAQ7F,KAAK,gB,4CAG5B,WAAU,IAAD,OACL,OACI,gCACI,sBAAK+C,MAAM,OAAX,UACI,qBAAKA,MAAM,YAAY9F,IAAI,aAAaC,IAAI,uBAC5C,oBAAG6F,MAAM,YAAT,cAAsB,2CAAa,mBAAG/F,KAAK,8CAAR,iCACnC,oBAAG+F,MAAM,YAAT,cAAsB,4CAAc,mBAAG/F,KAAK,sDAAR,sCACpC,oBAAG+F,MAAM,YAAT,cAAsB,wEAG1B,eAAC,IAAD,CAAM4H,SAAU1D,KAAKkD,aAAcxN,UAAU,gBAAgBoG,MAAM,QAAnE,UACA,oBAAIA,MAAM,gCAAV,mCAEA,oBAAGA,MAAM,mBAAT,cAA6B,uNAC7B,mBAAGA,MAAM,cAAT,sGACA,oBAAGA,MAAM,mBAAT,cAA6B,6GAA+E,mBAAG/F,KAAK,qBAAR,mCAExG,eAAC,IAAK4N,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACI,cAAC,IAAKC,MAAN,UAAY,wFACZ,eAAC,IAAKK,OAAN,CAAaH,SAAS,OAAOrJ,MAAOsF,KAAKjD,MAAMkC,SAAUtE,SAAUqF,KAAKsC,oBAAxE,UAEI,wBAAQ5H,MAAM,wBAAd,mCACA,wBAAQA,MAAM,qBAAd,sCAIR,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACI,cAAC,IAAKC,MAAN,UAAY,uEACZ,6NACA,eAAC,IAAKK,OAAN,CAAaxJ,MAAOsF,KAAKjD,MAAMuE,MAAO3G,SAAUqF,KAAKuC,iBAArD,UACI,wBAAQ7H,MAAM,QAAd,mBACA,wBAAQA,MAAM,sBAAd,iCACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,oBAAd,gCACA,wBAAQA,MAAM,kBAAd,mCAIR,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACI,cAAC,IAAKC,MAAN,UAAY,yHACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMwE,YAAa5G,SAAUqF,KAAKwC,2BAI5E,eAAC,IAAKmB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACI,cAAC,IAAKC,MAAN,UAAY,oFACX,CAAC,YAAY3K,KAAI,SAAC8K,GAAD,aAClB,sBAA6BtO,UAAU,OAAvC,UACI,cAAC,IAAKyO,MAAN,CACAC,MAAI,EAACC,IAAE,EAACC,IAAE,EAACC,OAAK,EAChBP,KAAMA,EACN5N,GAAI,EACJqE,MAAO,mBACPC,MAAO,EAAKqC,MAAM0E,KAClB9G,SAAU,EAAK+H,kBAGf,cAAC,IAAKyB,OAAN,GACAC,MAAI,EAACC,IAAE,EAACG,MAAI,EAACC,MAAI,EAACC,KAAG,EAAClE,UAAQ,GAD9B,uJAEMwD,GAFN,sBAGO,gEAHP,mBAII,GAJJ,sBAKO,EAAKjH,MAAM0E,MALlB,yBAMU,EAAKiB,iBANf,IASA,cAAC,IAAKyB,MAAN,CACAQ,QAAM,EACNX,KAAMA,EACNvJ,MAAO,SACPrE,GAAI,EACJsE,MAAO,EAAKqC,MAAM0E,KAClB9G,SAAU,EAAK+H,oBAzBnB,kBAAqBsB,UA+BzB,eAAC,IAAKL,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACI,cAAC,IAAKC,MAAN,UAAY,yHACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM2E,WAAY/G,SAAUqF,KAAKwC,2BAI3E,eAAC,IAAKmB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACR,cAAC,IAAKC,MAAN,UAAY,qEACZ,qFAEA,eAAC,IAAKK,OAAN,CAAaxJ,MAAOsF,KAAKjD,MAAM4E,UAAWhH,SAAUqF,KAAK4C,qBAAzD,UACE,wBAAQlI,MAAM,IAAd,iDACA,wBAAQA,MAAM,IAAd,kHACA,wBAAQA,MAAM,IAAd,gFACA,wBAAQA,MAAM,IAAd,sFACA,wBAAQA,MAAM,IAAd,mFACA,wBAAQA,MAAM,IAAd,iDACA,wBAAQA,MAAM,IAAd,0BAIJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,gIACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM6E,gBAAiBjH,SAAUqF,KAAK6C,+BAG9E,eAAC,IAAKc,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,+BAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,wGACZ,4NACA,cAAC,IAAKC,QAAN,CAAcc,GAAG,WAAWC,KAAM,EAAGnK,MAAOsF,KAAKjD,MAAMiF,WAAYrH,SAAUqF,KAAKgD,0BAGpF,eAAC,IAAKW,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,oLADd,IACoL,uBAClL,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMgF,gBAAiBpH,SAAUqF,KAAKiD,8BAG9E,eAAC,IAAKU,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yGACX,CAAC,YAAY3K,KAAI,SAAC8K,GAAD,OAChB,sBAA6BtO,UAAU,OAAvC,UACE,cAAC,IAAKyO,MAAN,CACEW,QAAM,EAACC,QAAM,EAACC,KAAG,EAACC,QAAM,EACxBjB,KAAMA,EACN5N,GAAE,kBAAa4N,GACfvJ,MAAO,yBACPC,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEe,QAAM,EAACC,cAAY,EACnBnB,KAAMA,EACNvJ,MAAO,wBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEiB,SAAO,EAACC,OAAK,EAACC,IAAE,EAACC,SAAO,EACxBvB,KAAMA,EACNvJ,MAAO,2BACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEqB,QAAM,EAACC,WAAS,EAChBzB,KAAMA,EACNvJ,MAAO,mBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEQ,QAAM,EACNX,KAAMA,EACNvJ,MAAO,SACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,sBA3CnB,kBAAqBkB,UAiDzB,uBACA,mBAAGlI,MAAM,+BAAT,SACE,yXAWQ,cAACR,EAAA,EAAD,CAAQhB,QAAQ,UAAU0J,KAAK,SAA/B,8B,GAxQM/C,a,mDC4DX2E,G,cA1DM,SAACjH,GACpB,MAAwCA,EAAMkH,aAAtChJ,EAAR,EAAQA,KAAMiJ,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,QAC5B,EAA0BlR,oBAAS,GAAnC,mBAAOmR,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAKxQ,UAAU,wBAAf,UACE,sBAAKA,UAAU,mBAAmBa,QAAS,WAT7C2P,GAAS,IASP,UACE,sBAAKxQ,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BmH,IAC5B,mBAAGnH,UAAU,YAAb,SAA0BoQ,OAE5B,qBAAK9P,IAAK+P,EAAOrQ,UAAU,eAAeO,IAAI,sBAGhD,eAACkQ,EAAA,EAAD,CACEjL,KAAM+K,EACNG,OAhBoB,WACxBF,GAAS,IAgBLxQ,UAAU,0BACV2Q,SAAS,SACTC,UAAQ,EALV,UAOE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAc5J,MAGhB,cAACsJ,EAAA,EAAMO,KAAP,CAAYhR,UAAU,yBAAtB,SACE,eAACiR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACA,qBAAK9Q,IAAK+P,EAAOrQ,UAAU,eAAeO,IAAI,YAE9C,cAAC2Q,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACGd,EAAQ9M,KAAI,SAAC6N,GACZ,OACE,gCACE,6BAAKA,EAAOC,UAEXD,EAAOE,SAAS/N,KAAI,SAACgO,GACpB,OAAO,4BAAIA,4BC/C7BC,EAAeC,EAAQ,KAkBZC,EAfA,WACb,OACE,sBAAK3R,UAAU,uCAAuCU,GAAG,mBAAzD,UACA,+CACG+Q,EAAajO,KAAI,SAACsH,GAAD,OAChB,qBAAK9K,UAAU,qBAAf,SACE,cAAC,EAAD,CACEmQ,aAAcrF,KAFuBA,EAAS3D,a,SCRpDyK,GADuBF,EAAQ,KACI,GAE5BG,GAAgB,WAC3B,OACE,gCACG,IACD,oBAAI7R,UAAU,cAAd,SAA6B4R,GAAUE,kBACvC,oBAAI9R,UAAU,iBAAd,SAAgC4R,GAAUG,qBAC1C,cAACC,EAAA,EAAD,CACEC,MAAI,EACJjS,UAAU,gBACVa,QAAS,SAAC8O,GAAD,OAAYtQ,OAAOQ,SAASQ,KAAO,aAC5CuE,QAAQ,kBAJV,mBAOS,QAKFsN,GAAgB,WAC3B,OACE,gCACE,oBAAIlS,UAAU,cAAd,yBACA,oBAAIA,UAAU,iBAAd,uBACA,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,WAAb,SAAyB4R,GAAUO,eACnC,mBAAGnS,UAAU,WAAb,SAAyB4R,GAAUQ,eACnC,mBAAGpS,UAAU,WAAb,SAAyB4R,GAAUS,eACnC,mBAAGrS,UAAU,WAAb,SAAyB4R,GAAUU,sBAM9BC,GAAgB,WAC3B,OACE,gCACE,oBAAIvS,UAAU,cAAd,yBACA,oBAAIA,UAAU,6BAAd,SACE,cAAC,IAAD,CAAiBwS,KAAM,CAAC,MAAO,YAEjC,qBAAKxS,UAAU,mBAAf,SACE,mBAAGA,UAAU,WAAb,SAAyB4R,GAAUa,sBAM9BC,GAAgB,WAC3B,OACE,gCACE,oBAAI1S,UAAU,cAAd,6BACA,qBAAKA,UAAU,mBAAf,SACE,mBAAGA,UAAU,WAAb,SAAyB4R,GAAUe,oBCJ5BC,G,kDA5CX,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IACD4J,WAAahR,IAAMiR,YAFT,E,qDAKnB,WAEqB,WADIxI,KAAKrB,MAAM8J,MAAMC,OAA9BzR,UAEJ+I,KAAKuI,WAAWI,QAAQC,mB,oBAKhC,WACI,OACI,8BACI,sBAAKlT,UAAU,sBAAf,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,GAAD,MAOJ,qBAAKA,UAAU,wBAAf,SACI,cAAC,GAAD,MAGJ,qBAAKA,UAAU,wBAAf,SACI,cAAC,GAAD,MAGJ,qBAAKA,UAAU,wBAAwBU,GAAG,eAAeyS,IAAK7I,KAAKuI,WAAnE,SACI,cAAC,EAAD,e,GApCLtH,aCuDJ6H,I,OA1DE,SAACnK,GAChB,MAAwCA,EAAMoK,SAAtClM,EAAR,EAAQA,KAAMiJ,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,QAC5B,EAA0BlR,oBAAS,GAAnC,mBAAOmR,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAKxQ,UAAU,wBAAf,UACE,sBAAKA,UAAU,mBAAmBa,QAAS,WAT7C2P,GAAS,IASP,UACE,sBAAKxQ,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BmH,IAC5B,mBAAGnH,UAAU,YAAb,SAA0BoQ,OAE5B,qBAAK9P,IAAK+P,EAAOrQ,UAAU,eAAeO,IAAI,yBAGhD,eAACkQ,EAAA,EAAD,CACEjL,KAAM+K,EACNG,OAhBoB,WACxBF,GAAS,IAgBLxQ,UAAU,0BACV2Q,SAAS,SACTC,UAAQ,EALV,UAOE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAc5J,MAGhB,cAACsJ,EAAA,EAAMO,KAAP,CAAYhR,UAAU,yBAAtB,SACE,eAACiR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACA,qBAAK9Q,IAAK+P,EAAOrQ,UAAU,eAAeO,IAAI,YAE9C,cAAC2Q,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACGd,EAAQ9M,KAAI,SAAC6N,GACZ,OACE,gCACE,6BAAKA,EAAOC,UAEXD,EAAOE,SAAS/N,KAAI,SAACgO,GACpB,OAAO,4BAAIA,4BC/C7B8B,GAAW5B,EAAQ,KAiBRC,GAdA,WACb,OACE,qBAAK3R,UAAU,uCAAuCU,GAAG,mBAAzD,SACG4S,GAAS9P,KAAI,SAAC+P,GAAD,OACZ,qBAAKvT,UAAU,qBAAf,SACE,cAAC,GAAD,CACEqT,SAAUE,KAF2BA,EAAOpM,YC2BzCqM,G,kDA/BX,WAAYvK,GAAQ,uCACVA,G,qDAIV,c,oBAQA,WACI,OACI,qBAAKjJ,UAAU,sBAAf,SACI,sBAAKA,UAAU,wBAAwBU,GAAG,eAA1C,UACI,qBAAKV,UAAU,wBAAf,SACI,cAAC,GAAD,MAEJ,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,cAACyT,GAAD,gB,GAvBJlI,aCgDLmI,I,mNA/CblG,aAAe,SAACtF,GACdA,EAAEuF,iBAIF,EAAKxE,MAAMC,QAAQ7F,KAAK,c,4CAK1B,WACC,OACE,8BAED,eAAC,IAAD,CAAM2K,SAAU1D,KAAKkD,aAAcxN,UAAU,kBAA7C,UAEA,kCAAI,2EAAJ,OACE,6BACE,8BACE,iWACA,mQACA,4RACA,6LACA,yOACA,8UAKJ,oBAAGoG,MAAM,cAAT,cAAwB,8CACxB,mBAAGA,MAAM,mBAAT,SACG,8BACD,8JACA,oSAIF,cAACR,EAAA,EAAD,CAAQhB,QAAQ,UAAU0J,KAAK,SAA/B,4G,GAxCmB/C,c,2DCyBVoI,GA1BG,SAAC,GAMZ,IALLC,EAKI,EALJA,MACAzM,EAII,EAJJA,KACA0M,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACGC,EACC,mBACJ,OACE,sBAAK/T,UAAU,aAAf,UACE,uBAAOgU,QAAS7M,EAAhB,SAAuByM,IACtBE,GACC,sBAAM9T,UAAU,mBAAhB,SACE,cAAC,IAAD,CAAiBwS,KAAM,CAAC,KAAM,oBAGlC,mDACMuB,GADN,IAEE5N,UAAW0N,EACX1M,KAAMA,EACNzG,GAAIyG,EACJnH,UAAU,sBClBZiU,I,OAAMvC,EAAQ,KAkFLwC,G,4MA/Eb7M,MAAQ,CACNwC,KAAM,GACNsK,OAAQ,I,EAGVC,YAAcH,GAAII,OAAO,CACvB5I,MAAOwI,GAAIK,SACXC,SAAUN,GAAIK,W,EAGhBE,eAAiBP,GAAII,OAAO,CAC1B5I,MAAOwI,GAAIK,SACXC,SAAUN,GAAIK,W,EAGhBG,OAAgC,UAAtB,EAAKxL,MAAMyL,SAAqB,EAAKN,YAAc,EAAKI,e,EAGlEG,SAAW,WACT,IAAQb,EAAU,EAAKW,OAAOE,SAAS,EAAKtN,MAAMwC,MAA1CiK,MACJK,EAAS,GAEb,OADIL,GAAOA,EAAMxD,QAAQ9M,KAAI,SAAC0E,GAAD,OAAQiM,EAAOjM,EAAE0M,MAAQ1M,EAAE7C,WACjD8O,G,EAGTU,eAAiB,SAACC,EAAYC,GAC5B,IAAMZ,EAAM,gBAAQ,EAAK9M,MAAM8M,QACvBL,EAAU,EAAKW,OAAOE,SAAZ,eAAwBG,EAAaC,IAA/CjB,MAIR,OAHAA,EACKK,EAAOW,GAAchB,EAAMxD,QAAQ,GAAGjL,eAChC8O,EAAOW,GACXX,G,EAGT3G,aAAe,SAACtF,GACdA,EAAEuF,iBACF,IAAM0G,EAAS,EAAKQ,WACpB,EAAKjM,SAAS,CAAEyL,WACZvL,OAAOoM,KAAKb,GAAQjP,QACxB,EAAK+P,Y,EAGPC,aAAe,YAA+B,IAAbC,EAAY,EAA3BC,cACVvL,EAAI,gBAAQ,EAAKxC,MAAMwC,MAC7BA,EAAKsL,EAAMhO,MAAQgO,EAAMnQ,MACzB,EAAK0D,SAAS,CAAEmB,SAChB,EAAKnB,SAAS,CAAEyL,OAAQ,EAAKU,eAAeM,EAAMhO,KAAMgO,EAAMnQ,U,iDAGhE,SAAYmC,EAAMyM,EAAOyB,GAAkD,IAArCxB,EAAoC,wDAAfvF,EAAe,uDAAR,OAChE,EAAyBhE,KAAKjD,MAAtBwC,EAAR,EAAQA,KAAMsK,EAAd,EAAcA,OACd,OACE,cAAC,GAAD,CACE7F,KAAMA,EACNuF,YAAaA,EACbD,MAAOA,EACP5O,MAAO6E,EAAK1C,GACZA,KAAMA,EACNlC,SAAUqF,KAAK4K,aACfpB,MAAOK,EAAOhN,GACdkO,YAAaA,M,6BAKnB,SAAgBzB,GACd,OACE,qBAAK5T,UAAU,aAAf,SACE,wBACEsG,SAAkD,IAAxCsC,OAAOoM,KAAK1K,KAAKqK,YAAYzP,OACvClF,UAAU,+BAFZ,SAIG4T,U,GAzEQrI,aCDb+J,I,OADM5D,EAAQ,IACH,yDAgFF6D,G,4MA7EblO,MAAQ,CACNwC,KAAM,CAAE4B,MAAO,GAAI8I,SAAU,IAC7BJ,OAAQ,I,EAGVqB,kB,uCAAoB,WAAOC,GAAP,SAAAtM,EAAA,sEACZM,IACHC,IAAI4L,GAAU,CAAEtC,OAAQ,CAAEyC,MAAOA,KACjC5W,MAAK,SAACgM,GACLjL,MAAM,wBACN,IAAM8V,EAAW7K,EAAShB,KAAKA,KAAOgB,EAAShB,KAAKA,KAAO,GAC3DxK,OAAOC,eAAeoO,QAAQ,WAAYtE,KAAKuE,UAAU+H,IACzDpT,QAAQC,IAAIlD,OAAOC,eAAeC,QAAQ,aAC1C,EAAKoW,gBAENC,OAAM,SAAC9B,GACNlU,MAAM,kCAXQ,2C,wDAepBqV,S,sBAAW,sBAAA9L,EAAA,sEAEHM,IACHmB,KAAK0K,GAAU,CACd7J,MAAO,EAAKpE,MAAMwC,KAAK4B,MACvB8I,SAAU,EAAKlN,MAAMwC,KAAK0K,WAE3B1V,MAAK,SAACgM,GACLjL,MAAM,qBACN0C,QAAQC,IAAIsI,EAAShB,KAAKA,MAC1B,EAAK2L,kBAAkB3K,EAAShB,KAAKA,SAEtC+L,OAAM,SAAC9B,GACN,IAAM+B,EAAa/B,EAAMjJ,SAASiL,OAElC,OADAxT,QAAQC,IAAIsT,GACJA,GACN,KAAK,IACHjW,MAAM,qBACN,MACF,KAAK,IACHA,MAAM,mBACN,MACF,KAAK,IACH0C,QAAQC,IAAI,oBACZ,MACF,QACE3C,MAAMkU,OA1BL,2C,EA+BXiC,eAAiB,WACf,EAAK9M,MAAMC,QAAQ7F,KAAK,c,EAG1BsS,WAAa,WACX,EAAK1M,MAAMC,QAAQ7F,KAAK,KACxBhE,OAAOQ,SAASC,QAAO,I,4CAGzB,WACE,OACE,qBAAKE,UAAU,kBAAf,SACE,uBAAMgO,SAAU1D,KAAKkD,aAAcxN,UAAU,OAAO0U,SAAS,QAA7D,UACE,uCACCpK,KAAK0L,YAAY,QAAS,QAAS,IAAI,GACvC1L,KAAK0L,YAAY,WAAY,YAC7B1L,KAAK2L,gBAAgB,SACtB,wBAAQpV,QAASyJ,KAAKyL,eAAgB/V,UAAU,sBAAhD,+B,GArEUkU,ICFdgC,IADMxE,EAAQ,IACA,mDAkOLyE,G,4MA9Nb9O,MAAQ,CACNF,KAAM,GACNsE,MAAO,GACPtB,WAAY,GACZuB,IAAK,GACLC,OAAQ,GACRG,QAAS,GACTK,aAAc,GACdoI,SAAU,GACVJ,OAAQ,I,EAGV5H,gBAAkB,SAACrE,GAEjB,EAAKQ,SAAS,CACZvB,KAAMe,EAAEE,OAAOpD,S,EAInBwH,sBAAwB,SAACtE,GAEvB,EAAKQ,SAAS,CACZyB,WAAYjC,EAAEE,OAAOpD,S,EAIzByH,iBAAmB,SAACvE,GAClB,EAAKQ,SAAS,CACZ+C,MAAOvD,EAAEE,OAAOpD,S,EAIpBoR,oBAAsB,SAAClO,GACrB,EAAKQ,SAAS,CACZ6L,SAAUrM,EAAEE,OAAOpD,S,EAIvB0H,kBAAoB,SAACxE,GACnB,EAAKQ,SAAS,CACZgD,IAAKxD,EAAEE,OAAOpD,S,EAIlB2H,kBAAoB,SAACzE,GACnB,EAAKQ,SAAS,CACZiD,OAAQzD,EAAEE,OAAOpD,S,EAIrB+H,mBAAqB,SAAC7E,GACpB,EAAKQ,SAAS,CACZoD,QAAS5D,EAAEE,OAAOpD,S,EAItBqR,W,sBAAa,sBAAAlN,EAAA,sEACLM,IACHmB,KAAKsL,GAAa,CACjB/O,KAAM,EAAKE,MAAMF,KACjBsE,MAAO,EAAKpE,MAAMoE,MAClB8I,SAAU,EAAKlN,MAAMkN,SACrB+B,KAAK,gBACA,EAAKjP,SAGXxI,MAAK,SAACgM,GACLjL,MAAM,4BACN0C,QAAQC,IAAIsI,GACZ,EAAK2K,kBAAkB3K,EAAShB,KAAKA,SAEtC+L,OAAM,SAAC9B,GACNlU,MAAMkU,MAhBC,2C,EAoBbtG,aAAe,SAACtF,GACdA,EAAEuF,iBACF,EAAK4I,aAEL,EAAKpN,MAAMC,QAAQ7F,KAAK,qB,4CAG1B,WAAU,IAAD,OACP,OACE,gCACE,sBAAK+C,MAAM,OAAX,UACE,qBAAKA,MAAM,YAAY9F,IAAI,aAAaC,IAAI,uBAC5C,oBAAG6F,MAAM,YAAT,cAAsB,2CAAa,mBAAG/F,KAAK,8CAAR,iCACnC,oBAAG+F,MAAM,YAAT,cAAsB,4CAAc,mBAAG/F,KAAK,sDAAR,sCACpC,oBAAG+F,MAAM,YAAT,cAAsB,wEAKxB,eAAC,IAAD,CAAM4H,SAAU1D,KAAKkD,aAAcxN,UAAU,gBAAgBoG,MAAM,QAAnE,UAEE,oBAAIA,MAAM,oBAAV,+BACA,oBAAIA,MAAM,gCAAV,mCAEA,oBAAGA,MAAM,mBAAT,cAA6B,uNAC7B,mBAAGA,MAAM,cAAT,sGACA,oBAAGA,MAAM,mBAAT,cAA6B,6GAA+E,mBAAG/F,KAAK,qBAAR,mCAE5G,eAAC,IAAK4N,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,eAAC,IAAKC,MAAN,WAAY,sCAAY,sBAAMnO,UAAU,aAAhB,+BACxB,cAAC,IAAKoO,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMF,KAAMlC,SAAUqF,KAAKiC,kBACjF,cAAC,IAAKgC,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,8CACZ,cAAC,IAAKC,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAM8C,WAAYlF,SAAUqF,KAAKkC,wBACvF,cAAC,IAAK+B,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,eAAC,IAAKC,MAAN,WAAY,sCAAY,sBAAMnO,UAAU,aAAhB,4BACxB,cAAC,IAAKoO,QAAN,CAAcC,SAAS,OAAOC,KAAK,QAAQtJ,MAAOsF,KAAKjD,MAAMoE,MAAOxG,SAAUqF,KAAKmC,mBACnF,cAAC,IAAK8B,KAAN,CAAWvO,UAAU,aAArB,0HAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,eAAC,IAAKC,MAAN,WAAY,0CAAgB,sBAAMnO,UAAU,aAAhB,4BAC5B,cAAC,IAAKoO,QAAN,CAAcC,SAAS,OAAOC,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMkN,SAAUtP,SAAUqF,KAAK8L,yBAGvF,eAAC,IAAKnI,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,4CACZ,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMqE,IAAKzG,SAAUqF,KAAKoC,oBAChE,cAAC,IAAK6B,KAAN,CAAWvO,UAAU,aAArB,qEAKF,eAAC,IAAKiO,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yCACZ,eAAC,IAAKK,OAAN,CAAaxJ,MAAOsF,KAAKjD,MAAMsE,OAAQ1G,SAAUqF,KAAKqC,kBAAtD,UAEE,wBAAQ3H,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,oBACA,wBAAQA,MAAM,aAAd,8BAKJ,eAAC,IAAKiJ,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,gBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,sDADd,IACsD,uBACpD,cAAC,IAAKA,MAAN,2IACA,cAAC,IAAKC,QAAN,CAAcE,KAAK,OAAOtJ,MAAOsF,KAAKjD,MAAMyE,QAAS7G,SAAUqF,KAAKyC,wBAGtE,eAAC,IAAKkB,MAAN,CAAYjO,UAAU,OAAOkO,UAAU,iBAAvC,UACE,cAAC,IAAKC,MAAN,UAAY,yGACX,CAAC,YAAY3K,KAAI,SAAC8K,GAAD,OAChB,sBAA6BtO,UAAU,OAAvC,UACE,cAAC,IAAKyO,MAAN,CACEW,QAAM,EAACC,QAAM,EAACC,KAAG,EAACC,QAAM,EACxBjB,KAAMA,EACN5N,GAAE,kBAAa4N,GACfvJ,MAAO,yBACPC,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEe,QAAM,EAACC,cAAY,EACnBnB,KAAMA,EACNvJ,MAAO,wBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEiB,SAAO,EAACC,OAAK,EAACC,IAAE,EAACC,SAAO,EACxBvB,KAAMA,EACNvJ,MAAO,2BACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEqB,QAAM,EAACC,WAAS,EAChBzB,KAAMA,EACNvJ,MAAO,mBACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,oBAGjB,cAAC,IAAKqB,MAAN,CACEQ,QAAM,EACNX,KAAMA,EACNvJ,MAAO,SACPrE,GAAE,kBAAa4N,GACftJ,MAAO,EAAKqC,MAAM+E,OAClBnH,SAAU,EAAKmI,sBA3CnB,kBAAqBkB,UAiDzB,uBAEA,cAAC1I,EAAA,EAAD,CAAQhB,QAAQ,UAAU0J,KAAK,SAA/B,gC,GArNiB/C,aCiBZgL,IArBH7E,EAAQ,I,4MAIlBrK,MAAQ,CACNwC,KAAM,CAAE2M,SAAU,GAAIjC,SAAU,IAChCJ,OAAQ,I,4CAGV,WACE,OACE,qBAAKnU,UAAU,kBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,WAAd,gD,GAVoBkU,KCyCfuC,G,4JAvBb,WACE,OACE,cAAC,WAAD,UACE,sBAAKzW,UAAU,GAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WAXAX,OAAOC,eAAeC,QAAQ,YAClC,cAAC,IAAD,CAAOqV,KAAK,YAAY8B,UAAW1G,IACnC,cAAC,IAAD,CAAO4E,KAAK,YAAY8B,UAAWlL,IAW7B,cAAC,IAAD,CAAOoJ,KAAK,YAAY8B,UAAWtP,IACnC,cAAC,IAAD,CAAOwN,KAAK,SAAS8B,UAAWlD,KAChC,cAAC,IAAD,CAAOoB,KAAK,cAAc8B,UAAWhD,KACrC,cAAC,IAAD,CAAOkB,KAAK,SAAS8B,UAAWnB,KAChC,cAAC,IAAD,CAAOX,KAAK,YAAY8B,UAAWP,KACnC,cAAC,IAAD,CAAOvB,KAAK,mBAAmB8B,UAAWH,KAC1C,cAAC,IAAD,CAAO3B,KAAK,aAAa8B,UAAW9D,KACpC,cAAC,IAAD,CAAOgC,KAAK,IAAI8B,UAAW9D,iB,GAfrBrH,a,uCCVlBoL,KAAQvM,IAAIwM,KAAKC,KAAKC,MAEtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJpJ,SAASC,eAAe,SAO1BpP,M","file":"static/js/main.0e21f2c4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { React, useState, useEffect } from 'react'\r\n//import { Link, NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport './Navbar.css'\r\n\r\nfunction NavBar() {\r\n  const [loginStatus, setLoginStatus] = useState(window.sessionStorage.getItem('userInfo') ? \"log\" : null);\r\n\r\n  const renderLoginText = () => {\r\n    if (loginStatus) {\r\n      return (\r\n        <Nav.Link onClick={handleLogout} className=\"ml-auto\">\r\n          Logout\r\n        </Nav.Link>\r\n      )\r\n    } else {\r\n      return (\r\n        <Nav.Link href=\"/Login\" className=\"ml-auto\">\r\n          Login/Register\r\n        </Nav.Link>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    window.sessionStorage.clear()\r\n    alert('Logout successfull!')\r\n    setLoginStatus(null);\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <Navbar className=\"main-nav\" bg=\"light\" expand=\"lg\">\r\n      <Container className=\"nav-container\">\r\n        <Navbar.Brand className=\"nav-name\" href=\"/\">\r\n          <img className=\"logo-img\" src=\"logo_with_text.PNG\" alt=\"logo\"></img>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/About\">About</Nav.Link>\r\n            <Nav.Link href=\"/Galary\">Our Listeners</Nav.Link>\r\n            <Nav.Link href=\"/UserInfo\">Online Booking</Nav.Link>\r\n          </Nav>\r\n          <Nav>{renderLoginText()}</Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport {MuiPickersUtilsProvider, \r\n        KeyboardDatePicker, \r\n        StaticDatePicker, \r\n        DatePicker,\r\n        DateRangePicker, \r\n        Calendar} from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SelectTimezoneMaterialUi from 'input-material-ui';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerWidth: {\r\n      width: \"10%\",\r\n      backgroundColor: \"yellow\",\r\n      [theme.breakpoints.up(780)]: {\r\n        width: \"10%\"\r\n      }\r\n    },\r\n    datePicker: {\r\n        backgroundColor: \"#f3fbfa\",\r\n        position: \"relative\",\r\n        left: \"0%\",\r\n        top: \"5%\",\r\n        width: \"30%\",\r\n        height: \"70%\"\r\n    }\r\n}));\r\n\r\nconst TimeSlots = ({timeSlots,handleTimeSlotClick}) => {\r\n\r\n    // Use selectedDate to display corresponding slots\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n        new Date()\r\n    )\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date)\r\n    }\r\n\r\n    const dateStr = selectedDate.getFullYear().toString()+'-'+(selectedDate.getMonth()+1).toString()+'-'+selectedDate.getDate().toString()\r\n    console.log((dateStr))\r\n    \r\n    const timeSlotsInOneDay = (dateStr in timeSlots) ? timeSlots[dateStr] : Array()\r\n    timeSlotsInOneDay.sort(function(t1, t2) {\r\n        return (new Date(t1.time)).getHours() - (new Date(t2.time)).getHours();\r\n    })\r\n    console.log('timeSlots in One day: ', timeSlotsInOneDay)\r\n\r\n    // Create one-hour slots\r\n    var displayedSlots = Array()\r\n    for (const slot of timeSlotsInOneDay) {\r\n        const dateObj = new Date(slot.time)\r\n        var start = dateObj.getHours()\r\n        var end = (start+1)%24\r\n        const suffix = end<12 ? 'am' : 'pm'\r\n        start -= start>12 ? 12 : 0\r\n        end -= end>12 ? 12 : 0\r\n        const timeStr = start.toString()+':00-'+end.toString()+':00 '+suffix\r\n        displayedSlots.push({time : timeStr, id : slot.time, isChosen : slot.isChosen})\r\n    }\r\n\r\n    // Create slot buttons\r\n    const TimeSlotListInOneDay = displayedSlots.map(displayedSlot => {\r\n        return (\r\n            // <Button className={displayedSlot.isChosen?\"chosenTimeSlot\":\"timeSlot\"} variant=\"Secondary\" id={displayedSlot.id} key={displayedSlot.id} onClick={handleTimeSlotClick}>{displayedSlot.time}</Button>\r\n            <button className={displayedSlot.isChosen?\"chosenTimeSlot\":\"timeSlot\"} id={displayedSlot.id} key={displayedSlot.id} onClick={handleTimeSlotClick}>{displayedSlot.time}</button>\r\n        )\r\n    })\r\n\r\n    const disableDate = (date) => {\r\n        // Disable the days beyond 7 days from now\r\n        const isBeyond = Math.floor((date - new Date()) / (1000*60*60*24)) >= 6\r\n        return isBeyond\r\n    }\r\n\r\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\r\n    const months = ['January','February','March','April','May','June','July','August','September','Octobor','November','December']\r\n    const date = selectedDate.getDate()\r\n    const day = days[selectedDate.getDay()]\r\n    const month = months[selectedDate.getMonth()]\r\n    const localDateObj = new Date()\r\n    const timeZoneOffset = Math.floor(localDateObj.getTimezoneOffset() / 60)\r\n    const offsetSign = timeZoneOffset<=0 ? '+' : '-' \r\n    const timeZoneOffsetStr = \" (\" + (timeZoneOffset===5 ? \"EST\" : (\"GMT \" + offsetSign + Math.abs(timeZoneOffset).toString() + \":00\")) + \")\"\r\n    \r\n    return (\r\n        <div>\r\n        <div className=\"CalendarPage\">\r\n            <div className=\"date-slot-wrapper\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                    disablePast\r\n                    disableToolbar\r\n                    shouldDisableDate={disableDate}\r\n                    orientation = 'portrait'\r\n                    variant = 'static'\r\n                    format = 'MM/dd/yyyy'\r\n                    margin = 'normal'\r\n                    id = 'date-picker'\r\n                    label = 'Date Picker'\r\n                    value = {selectedDate}\r\n                    onChange = {handleDateChange}/>\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n\r\n            <div className=\"TimeSlotListsInOneDay\">\r\n                <div className=\"TimeSlotTitle\">{day+', '+month+' '+date.toString()+timeZoneOffsetStr}</div>\r\n                <div className={displayedSlots.length>0?\"TimeSlotButtons\":\"NoAvailSlotsMessage\"}>\r\n                    {displayedSlots.length>0 ? TimeSlotListInOneDay : 'No available slots... Please try another date.'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"CalendarHint\">\r\n            * Select as many time slots as you wish. We will pick one to match you a listener.\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TimeSlots;","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst MatchDialog = ({numChosenSlots,message,handleNextClick,handleSuccessDialogOkClick}) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [maxWidth, setMaxWidth] = React.useState('sm');\r\n    const handleNextButton = () => {\r\n        handleNextClick();\r\n        setShow(true);\r\n    }\r\n    const handleSuccessDialogOkClose = () => {\r\n        handleSuccessDialogOkClick();\r\n        setShow(false);\r\n    }\r\n    console.log('Actual #chosen slots = ', numChosenSlots)\r\n    return (\r\n        <div>\r\n            { numChosenSlots>0 ?\r\n                <div>\r\n                    <Button className=\"next\" variant=\"Info\" onClick={handleNextButton}> Next </Button>\r\n                    <Dialog open={show} fullWidth={fullWidth} maxWidth={maxWidth}>\r\n                        <DialogTitle id=\"customized-dialog-title\">\r\n                            {message}\r\n                        </DialogTitle>\r\n                        {\r\n                            message==='Matching is done!' ?\r\n                            <div>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Click Ok to check the matching result.\r\n                                    </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button autoFocus onClick={handleSuccessDialogOkClose}> Ok </Button>\r\n                                </DialogActions>\r\n                            </div> : \r\n                            <div className=\"matching-loading-container\">\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"spinner-border text-warning\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        }\r\n                    </Dialog>\r\n                </div> : \r\n                <div>\r\n                    <Button className = \"disabledNext\" variant=\"secondary\" disabled>Next</Button>\r\n                </div>\r\n            }           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchDialog;","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport PropTypes from 'prop-types';\r\n// import Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst MatchResult = ({matchedListener,matchedTimeSlot,matchResultConfirmed,handleConfirmBookingClick,handleConfirmBookingDialogOkClose,handleRescheduleClick,handleCancelBookingClick,handleCancelBookingDialogOkClose}) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [maxWidth, setMaxWidth] = React.useState('sm');\r\n    \r\n    const handleConfirmBookingButton = () => {\r\n        handleConfirmBookingClick();\r\n        setShow(true);\r\n    }\r\n    const handleConfirmBookingDialogButton = () => {\r\n        handleConfirmBookingDialogOkClose();\r\n        setShow(true);\r\n    }\r\n\r\n    const handleRescheduleButton = () => {\r\n        handleRescheduleClick();\r\n        setShow(true);\r\n    }\r\n\r\n    const handleCancelBookingButton = () => {\r\n        handleCancelBookingClick();\r\n        setShow(true);\r\n    }\r\n    const handleCancelBookingDialogButton = () => {\r\n        handleCancelBookingDialogOkClose();\r\n        setShow(true);\r\n    }\r\n    \r\n\r\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\r\n    const months = ['January','February','March','April','May','June','July','August','September','Octobor','November','December']\r\n    const matchedDate = new Date(matchedTimeSlot)\r\n    const day = days[matchedDate.getDay()]\r\n    const month = months[matchedDate.getMonth()]\r\n    const date = matchedDate.getDate().toString()\r\n    const year = matchedDate.getFullYear().toString()\r\n    const dateDisplayed = day+', '+month+' '+date+', '+year\r\n    var start = matchedDate.getHours()\r\n    var end = (start+1)%24\r\n    const suffix = end<12 ? 'am' : 'pm'\r\n    start -= start>12 ? 12 : 0\r\n    end -= end>12 ? 12 : 0\r\n    const localDateObj = new Date()\r\n    const timeZoneOffset = Math.floor(localDateObj.getTimezoneOffset() / 60)\r\n    const offsetSign = timeZoneOffset<=0 ? '+' : '-' \r\n    const timeZoneOffsetStr = \" (\" + (timeZoneOffset===5 ? \"EST\" : (\"GMT \" + offsetSign + Math.abs(timeZoneOffset).toString() + \":00\")) + \")\"\r\n    const timeDisplayed = start.toString()+':00-'+end.toString()+':00 '+suffix+timeZoneOffsetStr\r\n    return (\r\n        <div className = \"matchResult\">\r\n            <ul className = \"matchResultGroup\">\r\n                <i class=\"bi bi-calendar-check-fill\"></i>\r\n                <li>{dateDisplayed}</li>\r\n                <li>{timeDisplayed}</li>\r\n                <i class=\"bi bi-person-fill\"></i>\r\n                <li>{matchedListener.name}</li>\r\n            </ul> \r\n            <div className = \"matchResultButtonGroup\">\r\n                <div className = \"matchResultButtonGroupWrapper\">\r\n                <Button className=\"reschedule\" variant=\"Info\" onClick={handleRescheduleButton}>Reschedule</Button>\r\n                <Button className=\"cancel-booking\" variant=\"Info\" onClick={handleCancelBookingButton}>Cancel</Button>\r\n                <Button className=\"confirm\" variant=\"Info\" onClick={handleConfirmBookingButton}>Confirm Appointment</Button>\r\n                <Dialog open={show} fullWidth={fullWidth} maxWidth={maxWidth}>\r\n                    <DialogTitle id=\"customized-dialog-title\">\r\n                        {\r\n                            matchResultConfirmed ?\r\n                            \"Thank you for booking with us!\" :\r\n                            \"Appointment cancelled!\"\r\n                        }\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {\r\n                                matchResultConfirmed ?\r\n                                \"You will get an email confirmation in a second. Click Ok to go to the main page.\" :\r\n                                \"Click Ok to go to the main page.\"\r\n                            } \r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={matchResultConfirmed ? handleConfirmBookingDialogButton : handleCancelBookingDialogButton}> Ok </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MatchResult;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Calendar.css\"\r\nimport TimeSlots from '../components/TimeSlots';\r\nimport Days from '../components/Days';\r\nimport MatchDialog from '../components/MatchDialog';\r\nimport MatchResult from '../components/MatchResult';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport {clone} from 'lodash';\r\n\r\nclass Calendar extends Component {\r\n  state = {\r\n    // Loading stage\r\n    loading: true,\r\n    timeSlots: [],\r\n    allDays: [],\r\n    bellringer: '',\r\n    dayOff: 0,\r\n    // Displaying stage\r\n    displaying: false,\r\n    numChosenSlots: 0,\r\n    chosenSlots: [],\r\n    // Matching stage\r\n    matching: false,\r\n    matchedListener: '',\r\n    matchedTimeSlot: '',\r\n    // success stage, a listener is matched!\r\n    success: false,\r\n    // failure stage, no listener is matched...\r\n    failure: false,\r\n    // confirming stage\r\n    confirming: false,\r\n    // confirmed stage\r\n    confirmed: false,\r\n    // cancelled stage\r\n    cancelled: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    // get the bellringer chosen university\r\n    console.log('bellringer_info', JSON.parse(window.sessionStorage.getItem(\"bellringer_info\")))\r\n    const chosenUni = JSON.parse(window.sessionStorage.getItem(\"bellringer_info\")).matchUni.search('Toronto')!==-1 ? 'uoft' : \"western\"\r\n\r\n    // get all the time slots from backend\r\n    console.log(\"Getting time slots of the chosen university from backend!\")\r\n    const url = 'https://ringbell-api.herokuapp.com/api/v1/listeners/timeSlotsInWeek'\r\n    const resp = await axios.get(url)\r\n    var uniTimeSlots = resp.data.data\r\n    // axios.post(url, {\r\n    //   title: \"Chosen University\",\r\n    //   body: chosenUni\r\n    // }).then (response => uniTimeSlots = response.data.data)\r\n    console.log(uniTimeSlots)\r\n    \r\n    // organize time slots through their local dates\r\n    var slotSetMp = {}\r\n    var date_timeID_Mp = {}\r\n    for (const timeSlot of uniTimeSlots) {\r\n      const timeSlotDate = new Date(timeSlot.date)\r\n      const dateStr = timeSlotDate.getFullYear().toString()+'-'+(timeSlotDate.getMonth()+1).toString()+'-'+timeSlotDate.getDate().toString()\r\n      if (! (dateStr in slotSetMp)) {\r\n        slotSetMp[dateStr] = new Set()\r\n      }\r\n      // check if the university is the one user has chosen\r\n      const uni = timeSlot.university.search('Toronto')!==-1 ? 'uoft' : 'western'\r\n      if (chosenUni === uni) {\r\n        slotSetMp[dateStr].add(timeSlot.date)\r\n        date_timeID_Mp[timeSlot.date] = timeSlot.timeID\r\n      }\r\n    }\r\n    var slotMp = {}\r\n    for (const [key,val] of Object.entries(slotSetMp)) {\r\n      slotMp[key] = new Array()\r\n      for (const item of val) {\r\n        console.log('check item/timeID', item, date_timeID_Mp[item])\r\n        slotMp[key].push({time: item, timeID: date_timeID_Mp[item], isChosen: false})\r\n      }\r\n    }\r\n    console.log('slotMp: ', slotMp)\r\n\r\n    this.setState({\r\n      loading: false,\r\n      displaying: true,\r\n      bellringer: JSON.parse(window.sessionStorage.getItem(\"bellringer_info\")),\r\n      timeSlots: slotMp\r\n    })\r\n    console.log(this.state.timeSlots)\r\n    console.log(this.state.bellringer)\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if (this.state.displaying) {\r\n      console.log(\"Making choices...\")\r\n      return\r\n    }\r\n    if (this.state.matching) {\r\n      // Choices confirmed! \r\n      var chosenSlots = Array()\r\n      for (const [key,val] of Object.entries(this.state.timeSlots)) {\r\n        for (const item of val) {\r\n          if (item.isChosen) {\r\n            chosenSlots.push({\"date\": item.time, \"timeID\": item.timeID})\r\n          }\r\n        }\r\n      }\r\n      console.log({\r\n        title: \"User chosen time slot IDs\",\r\n        body: chosenSlots\r\n      })\r\n\r\n      // manually added a delay here to see if matching state is handled properly, will delete later\r\n      await new Promise(r => setTimeout(r, 1000)); \r\n\r\n      const url = 'https://ringbell-api.herokuapp.com/api/v1/listeners/getMatch'\r\n      axios.post(url, {\r\n        title: \"User chosen time slot IDs\",\r\n        body: chosenSlots // a list of dates with TimeIDs\r\n      }).then (response => this.setState({\r\n          matching : false,\r\n          success : true,\r\n          matchedListener : response.data.data.listener,\r\n          matchedTimeSlot : response.data.data.timeSlot\r\n      }))\r\n      \r\n      return\r\n    }\r\n    if (this.state.success) {\r\n      console.log(\"Found a matched listener!\")\r\n      console.log(this.state.matchedListener)\r\n      console.log(this.state.matchedTimeSlot)\r\n      console.log(this.state.bellringer)\r\n\r\n      console.log(\"Compute the time string including time zone offset suffix\")\r\n      const localDateObj = new Date(this.state.matchedTimeSlot)\r\n      const localHour = localDateObj.getHours()\r\n      const hourValue = localHour<=12 ? localHour : (localHour-12)\r\n      const localHourStr = hourValue.toString() + \":00\" + (localHour<=12 ? 'am' : 'pm')\r\n      const timeZoneOffset = Math.floor(localDateObj.getTimezoneOffset() / 60)\r\n      const offsetSign = timeZoneOffset > 0 ? '-' : '+'\r\n      const offsetSuffix = timeZoneOffset===5 ? \" EST\" : (\"  GMT\" + offsetSign + Math.abs(timeZoneOffset).toString() + \":00\")\r\n      const yearMonthDate = localDateObj.getFullYear().toString()+'/'+(localDateObj.getMonth()+1).toString()+'/'+localDateObj.getDate().toString()+\" \"\r\n      const userLocaltimeStr = yearMonthDate + localHourStr + offsetSuffix\r\n      console.log(\"Local time string to send through email: \", userLocaltimeStr)\r\n\r\n      return\r\n    }\r\n    if (this.state.confirming) {\r\n      console.log(\"Confirming the appointment time...\")\r\n      return\r\n    }\r\n    if (this.state.confirmed) {\r\n\r\n      console.log(\"Compute the time string including time zone offset suffix\")\r\n      const localDateObj = new Date(this.state.matchedTimeSlot)\r\n      const localHour = localDateObj.getHours()\r\n      const hourValue = localHour<=12 ? localHour : (localHour-12)\r\n      const localHourStr = hourValue.toString() + \":00\" + (localHour<=12 ? 'am' : 'pm')\r\n      const timeZoneOffset = Math.floor(localDateObj.getTimezoneOffset() / 60)\r\n      const offsetSign = timeZoneOffset > 0 ? '-' : '+'\r\n      const offsetSuffix = timeZoneOffset===5 ? \"  EST\" : (\"  GMT\" + offsetSign + Math.abs(timeZoneOffset).toString() + \":00\")\r\n      const yearMonthDate = localDateObj.getFullYear().toString()+'/'+(localDateObj.getMonth()+1).toString()+'/'+localDateObj.getDate().toString()+\" \"\r\n      const userLocaltimeStr = yearMonthDate + localHourStr + offsetSuffix\r\n      console.log(\"time string to send through email: \", userLocaltimeStr)\r\n\r\n      console.log(\"Sending confirmation back to backend...\")\r\n      const url = 'https://ringbell-api.herokuapp.com/api/v1/listeners/confirmMatch'\r\n      console.log(\r\n        { \"timeSlot\" : this.state.matchedTimeSlot, \r\n          \"listener\" : this.state.matchedListener, \r\n          \"bellRinger\" : this.state.bellringer,\r\n          \"localTime\" : userLocaltimeStr\r\n        })\r\n      axios.post(url, {\r\n        title: \"User confirmed time slot ID and Listener\",\r\n        body: {\"timeSlot\" : this.state.matchedTimeSlot, \r\n               \"listener\" : this.state.matchedListener, \r\n               \"bellRinger\" : this.state.bellringer,\r\n               \"localTime\" : userLocaltimeStr\r\n              }\r\n      }).then (response => console.log(response.data))\r\n    }\r\n  }\r\n\r\n  handleTimeSlotClick = (e) => {\r\n\r\n    // update time slot chosen status\r\n    const timeSlotDate = new Date(e.target.id)\r\n    const dateStr = timeSlotDate.getFullYear().toString()+'-'+(timeSlotDate.getMonth()+1).toString()+'-'+timeSlotDate.getDate().toString()\r\n    var curTimeSlots = clone(this.state.timeSlots)\r\n    var curNumChosenSlots = this.state.numChosenSlots\r\n    for (var i=0; i<curTimeSlots[dateStr].length; i++) {\r\n      const slot = curTimeSlots[dateStr][i]\r\n      if (slot.time === e.target.id) {\r\n        curNumChosenSlots += slot.isChosen ? -1 : 1\r\n        curTimeSlots[dateStr][i] = {time : slot.time, timeID : slot.timeID, isChosen : !slot.isChosen}\r\n        break\r\n      }\r\n    }\r\n    this.setState({\r\n      timeSlots : curTimeSlots,\r\n      numChosenSlots : curNumChosenSlots\r\n    })\r\n  }\r\n  handleNextClick = (e) => {\r\n    this.setState({\r\n      displaying : false,\r\n      matching: true\r\n    })\r\n  }\r\n  handleSuccessDialogOkClick = (e) => {\r\n    this.setState({\r\n      success : false,\r\n      confirming : true,\r\n    })\r\n  }\r\n  handleConfirmBookingClick = (e) => {\r\n    this.setState({\r\n      confirming: false,\r\n      confirmed: true \r\n    })\r\n  }\r\n  handleRescheduleClick = (e) => {\r\n    // reset all the time slots to be not chosen\r\n    var rstTimeSlots = {}\r\n    for (const [key,val] of Object.entries(this.state.timeSlots)) {\r\n      rstTimeSlots[key] = new Array()\r\n      for (var i=0; i<val.length; i++) {\r\n        var item = val[i]\r\n        item.isChosen = false\r\n        rstTimeSlots[key].push(item)\r\n      }\r\n    }\r\n    this.setState({\r\n      confirming: false,\r\n      displaying: true,\r\n      timeSlots: rstTimeSlots,\r\n      numChosenSlots: 0\r\n    })\r\n  }\r\n  handleCancelBookingClick = (e) => {\r\n    this.setState({\r\n      confirming: false,\r\n      cancelled: true\r\n    })\r\n  }\r\n  handleCancelBookingDialogOkClose = (e) => {\r\n    this.props.history.push(\"/:position\");\r\n  }\r\n  handleConfirmBookingDialogOkClose = (e) => {\r\n    this.props.history.push(\"/:position\");\r\n  }\r\n  render() {\r\n    return (\r\n      this.state.loading ? \r\n        <div className=\"loading-container\">\r\n          <div class=\"text-center\">\r\n            <div class=\"spinner-border text-warning\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div> \r\n        </div> :\r\n        <StylesProvider injectFirst>\r\n        <div className=\"calendar-container\">\r\n          {\r\n            this.state.displaying ?\r\n            <div>\r\n              <div className=\"calendar-top\">EmpowerChange Online Listening Service</div>\r\n              <TimeSlots timeSlots={this.state.timeSlots} handleTimeSlotClick={this.handleTimeSlotClick}/>\r\n            </div> : \r\n            this.state.confirming || this.state.confirmed || this.state.cancelled ? \r\n            <div>\r\n              <div className=\"calendar-top\">EmpowerChange Online Listening Service</div>\r\n              <div className=\"matched-top\">{\"Almost done! Upcoming booking for \" + this.state.bellringer.name}</div>\r\n              <MatchResult matchedListener={this.state.matchedListener} \r\n                           matchedTimeSlot={this.state.matchedTimeSlot}\r\n                           matchResultConfirmed={this.state.confirmed} \r\n                           handleConfirmBookingClick={this.handleConfirmBookingClick} \r\n                           handleRescheduleClick={this.handleRescheduleClick} \r\n                           handleCancelBookingClick={this.handleCancelBookingClick}\r\n                           handleCancelBookingDialogOkClose={this.handleCancelBookingDialogOkClose}\r\n                           handleConfirmBookingDialogOkClose={this.handleConfirmBookingDialogOkClose}/> \r\n            </div> :\r\n            <div></div>\r\n          }\r\n\r\n          {\r\n            this.state.displaying||this.state.matching||this.state.success ? \r\n            <MatchDialog numChosenSlots={this.state.numChosenSlots} message={this.state.success?'Matching is done!':'Matching in progress...'} handleNextClick={this.handleNextClick}handleSuccessDialogOkClick={this.handleSuccessDialogOkClick}/> : \r\n            <div></div>\r\n          }\r\n        </div></StylesProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./Userinfo.css\";\r\n\r\nclass UserInfo extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    university: '',\r\n    WID: '',\r\n    gender: '',\r\n    matchUni: 'University of Toronto',\r\n    topic: '',\r\n    extra_topic: '',\r\n    faculty: '',\r\n    need: [],\r\n    extra_need: '',\r\n    condition: '',\r\n    extra_condition: '',\r\n    availability: '',\r\n    source: [],\r\n    last_match_info: '',\r\n    other_info: ''\r\n  }\r\n\r\n  updateInputName = (e) => {\r\n    // console.log(e);\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n  updateInputUniversity = (e) => {\r\n    // console.log(e);\r\n    this.setState({\r\n      university: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputWechat = (e) => {\r\n    this.setState({\r\n      WID: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputGender = (e) => {\r\n    this.setState({\r\n      gender: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputMatchUni = (e) => {\r\n    this.setState({\r\n      matchUni: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputTopic = (e) => {\r\n    this.setState({\r\n      topic: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputExtraTopic = (e) => {\r\n    this.setState({\r\n      extra_topic: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputFaculty = (e) => {\r\n    this.setState({\r\n      faculty: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputNeed = (e) => {\r\n    var needList = this.state.need;\r\n    needList.push(e.target.value);\r\n    this.setState({\r\n      need: needList\r\n    });\r\n  }\r\n\r\n  updateInputCondition = (e) => {\r\n    // CheckColors(this.value);\r\n    this.setState({\r\n      condition: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputExtraCondition = (e) => {\r\n    this.setState({\r\n      extra_condition: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputSource = (e) => {\r\n    var sourceList = this.state.source;\r\n    sourceList.push(e.target.value);\r\n    this.setState({\r\n      source: sourceList\r\n    });\r\n  }\r\n\r\n  updateInputOtherInfo = (e) => {\r\n    this.setState({\r\n      other_info: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputLastMatchInfo = (e) => {\r\n    this.setState({\r\n      last_match_info: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"before print state\");\r\n    // console.log(this.state);\r\n    // windows Session storage\r\n    window.sessionStorage.setItem(\"bellringer_info\",\r\n      JSON.stringify({\r\n        \"email\": this.state.email,\r\n        \"name\": this.state.name,\r\n        \"matchUni\": this.state.matchUni\r\n      })\r\n    );\r\n    // console.log(\"after print state\");\r\n    // redirect to calender\r\n    this.props.history.push('/Disclaimer');\r\n  }\r\n  \r\n  showextratopic = (name) =>  {\r\n    name.preventDefault();\r\n    if(name=='Other')document.getElementById('div1').innerHTML='Other: <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\"><Form.Label><b>If you choose “Others” for the above question, please enter the topic here. </b></Form.Label><Form.Control type=\"text\" value={this.state.extra_topic} onChange={this.updateInputExtraTopic} /></Form.Group>';\r\n    else document.getElementById('div1').innerHTML='';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"left\">\r\n          <img class=\"left-logo\" src=\"./logo.png\" alt=\"EmpowerChange Logo\"></img>\r\n          <p class=\"left-text\"> <b>LinkedIn: <a href=\"https://www.linkedin.com/company/listeners/\">EmpowerChange</a></b></p>\r\n          <p class=\"left-text\"> <b>Instagram: <a href=\"https://www.instagram.com/empowerchange_uoft/?hl=en\">empowerchange_uoft</a></b></p>\r\n          <p class=\"left-text\"> <b>Email: contact.listener@gmail.com</b></p>\r\n        </div>\r\n\r\n\r\n\r\n        <Form onSubmit={this.handleSubmit} className=\"userinfo-form\" class=\"right\">\r\n          <h3 class=\"info-form_heading text-danger\">IMPORTANT INFORMATION</h3>\r\n\r\n          <p class=\"font-weight-bold\"> <b>All information is used only to help clients and listeners to better and faster match. EmpowerChange will not disclose any private information without the user's written consent. </b></p>\r\n          <p class=\"text-danger\">Note: This platform is not intended for use by students with suicidal tendencies/plans. </p>\r\n          <p class=\"font-weight-bold\"> <b>If you have suicidal tendencies or plans, please call the Good2Talk hotline <a href=\"tel:1-866-925-5454\">+1-866-925-5454</a></b></p>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Name</b></Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.name} onChange={this.updateInputName} />\r\n            <Form.Text className=\"text-muted\">\r\n            (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Your School</b></Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.university} onChange={this.updateInputUniversity} />\r\n            <Form.Text className=\"text-muted\">\r\n            (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Email</b></Form.Label>\r\n            <Form.Control required=\"true\" type=\"email\" value={this.state.email} onChange={this.updateInputEmail} />\r\n            <Form.Text className=\"text-muted\">\r\n              Please make sure the email is entered correctly as confirmation email will be sent to your email address.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Wechat ID</b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.WID} onChange={this.updateInputWechat} />\r\n            <Form.Text className=\"text-muted\">\r\n            (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Gender</b></Form.Label>\r\n            <Form.Select value={this.state.gender} onChange={this.updateInputGender}>\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Non-binary\">Non-binary</option>\r\n\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Want to be matched with a listener from which school?</b></Form.Label>\r\n            <Form.Select required=\"true\" value={this.state.matchUni} onChange={this.updateInputMatchUni}>\r\n\r\n              <option value=\"University of Toronto\">University of Toronto</option>\r\n              <option value=\"Western University\">Western University</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Which topics you want to talk about?</b></Form.Label>\r\n            <p>(For each session, please select one topic you want to focus on. If necessary, you can check other topics in the next listening session. This information will be provided to the listener.)</p>\r\n            <Form.Select required=\"true\" value={this.state.topic} onChange={this.updateInputTopic}>\r\n              <option value=\"Family Relationship\">Family Relationship</option>\r\n              <option value=\"Romantic Relationship\">Romantic Relationship</option>\r\n              <option value=\"Friendship\">Friendship </option>\r\n              <option value=\"Academic Planning\">Academic Planning </option>\r\n              <option value=\"Career Planning\">Career Planning</option>\r\n              <option value=\"Other\">Other</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If you choose “Others” for the above question, please enter the topic here. </b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.extra_topic} onChange={this.updateInputExtraTopic} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>What is your major?</b></Form.Label> <br></br>\r\n            <Form.Label>(*For Academic/Career session, Please fill out this field and the information will be used to assist in matching listeners.)</Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.faculty} onChange={this.updateInputFaculty} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>What is your main need for this listening session</b></Form.Label>\r\n            {['checkbox'].map((type) => (\r\n              <div key={`default-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  Want to be heard\r\n                  type={type}\r\n                  id={1}\r\n                  label={\"Want to be heard\"}\r\n                  value={this.state.need}\r\n                  onChange={this.updateInputNeed}\r\n                />\r\n\r\n                <Form.Check\r\n                  Want to work with the listener to find solutions to problems\r\n                  type={type}\r\n                  label={\"Want to work with the listener to find solutions to problems\"}\r\n                  id={2}\r\n                  value={this.state.need}\r\n                  onChange={this.updateInputNeed}\r\n                />\r\n\r\n                <Form.Check\r\n                  Others\r\n                  type={type}\r\n                  label={\"Others\"}\r\n                  id={3}\r\n                  value={this.state.need}\r\n                  onChange={this.updateInputNeed}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If you choose “Others” for the above question, please enter the topic here. </b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.extra_need} onChange={this.updateInputExtraTopic} />\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>What is your current mental state?</b></Form.Label>\r\n            <p>(This information will be provided to the listener.)</p>\r\n\r\n            <Form.Select required=\"true\" value={this.state.condition} onChange={this.updateInputCondition}>\r\n              <option value=\"1\">Excellent, want to share happy mood</option>\r\n              <option value=\"2\">Everything is normal, but sometimes I am lazy and can't get motivated, a little confused and anxious</option>\r\n              <option value=\"3\">Not so good, just experienced some setbacks, emotional instability</option>\r\n              <option value=\"4\">In a state of extreme depression and anxiety, need to see a psychiatrist</option>\r\n              <option value=\"5\">Already saw a psychiatrist, trying to get better relief from symptoms</option>\r\n              <option value=\"6\">Have occasional suicidal tendencies</option>\r\n              <option value=\"7\">Others</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If you choose “Others” for the above question, please enter your mental state here.</b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.extra_condition} onChange={this.updateInputExtraCondition} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label><b>If you want to leave any messages for listeners, please fill it here.</b></Form.Label>\r\n            <p>(A brief description of the situation will better help the listener understand the your current situation so that they can better prepare for the listening, so we suggest filling it out.)</p>\r\n            <Form.Control as=\"textarea\" rows={3} value={this.state.other_info} onChange={this.updateInputOtherInfo} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If this is not your first time coming, please fill in the date of your last session and the name of the listener (format: date - listener's name)</b></Form.Label> <br></br>\r\n            <Form.Control type=\"text\" value={this.state.last_match_info} onChange={this.updateInputLastMatchInfo} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>How did you find out about the EmpowerCHANGE or the listening program?</b></Form.Label>\r\n            {['checkbox'].map((type) => (\r\n              <div key={`default-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  WeChat tweets and Public\r\n                  type={type}\r\n                  id={`default-${type}`}\r\n                  label={\"WeChat tweets / Public\"}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Friend introduction\r\n                  type={type}\r\n                  label={\"Friend's introduction\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Offline event or seminar\r\n                  type={type}\r\n                  label={\"Offline event or seminar\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Google searching\r\n                  type={type}\r\n                  label={\"Google searching\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Others\r\n                  type={type}\r\n                  label={\"Others\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Form.Group>\r\n\r\n          <br></br>\r\n          <p class=\"font-weight-bold text-danger\">\r\n            <b>\r\n              Dear Bell ringer, the system will send you a confirmation email in 15 mintues through empowerchange.peerlistener@gmail.com\r\n              to confirm your personal information and schedule details.\r\n              The listener will send you messages and group chat QR code 10 minutes ahead of the meeting.\r\n              Please check your email 10 minutes before the scheduled meeting time.\r\n            </b>\r\n          </p>\r\n\r\n          {/* <p>线上倾听将会在微信中进行。</p> */}\r\n\r\n\r\n          <Button variant=\"primary\" type=\"submit\" >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default UserInfo;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./Userinfo.css\";\r\n\r\nclass BookingInfo extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        university: '',\r\n        WID: '',\r\n        gender: '',\r\n        matchUni: 'University of Toronto',\r\n        topic: '',\r\n        extra_topic: '',\r\n        faculty: '',\r\n        need: [],\r\n        extra_need: '',\r\n        condition: '',\r\n        extra_condition: '',\r\n        availability: '',\r\n        source: [],\r\n        last_match_info: '',\r\n        other_info: ''\r\n    }\r\n\r\n    updateInputMatchUni = (e) => {\r\n        this.setState({\r\n            matchUni: e.target.value\r\n        });\r\n    }\r\n\r\n    updateInputExtraTopic = (e) => {\r\n        this.setState({\r\n            extra_topic: e.target.value\r\n        });\r\n    }\r\n\r\n    updateInputNeed = (e) => {\r\n        var needList = this.state.need;\r\n        needList.push(e.target.value);\r\n        this.setState({\r\n            need: needList\r\n        });\r\n    }\r\n\r\n    updateInputCondition = (e) => {\r\n        // CheckColors(this.value);\r\n        this.setState({\r\n            condition: e.target.value\r\n        });\r\n    }\r\n\r\n    updateInputExtraCondition = (e) => {\r\n        this.setState({\r\n            extra_condition: e.target.value\r\n        });\r\n    }\r\n\r\n    updateInputOtherInfo = (e) => {\r\n        this.setState({\r\n            other_info: e.target.value\r\n        });\r\n    }\r\n\r\n    updateInputLastMatchInfo = (e) => {\r\n        this.setState({\r\n            last_match_info: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInfoFromLogin = JSON.parse(window.sessionStorage.getItem('userInfo'));\r\n\r\n        // windows Session storage\r\n        window.sessionStorage.setItem(\"bellringer_info\",\r\n            JSON.stringify({\r\n                \"email\": userInfoFromLogin.email,\r\n                \"name\": userInfoFromLogin.name,\r\n                \"matchUni\": this.state.matchUni\r\n            })\r\n        );\r\n        // redirect to calender\r\n        this.props.history.push('/Disclaimer');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"left\">\r\n                    <img class=\"left-logo\" src=\"./logo.png\" alt=\"EmpowerChange Logo\"></img>\r\n                    <p class=\"left-text\"> <b>LinkedIn: <a href=\"https://www.linkedin.com/company/listeners/\">EmpowerChange</a></b></p>\r\n                    <p class=\"left-text\"> <b>Instagram: <a href=\"https://www.instagram.com/empowerchange_uoft/?hl=en\">empowerchange_uoft</a></b></p>\r\n                    <p class=\"left-text\"> <b>Email: contact.listener@gmail.com</b></p>\r\n                </div>\r\n\r\n                <Form onSubmit={this.handleSubmit} className=\"userinfo-form\" class=\"right\">\r\n                <h3 class=\"info-form_heading text-danger\">IMPORTANT INFORMATION</h3>\r\n\r\n                <p class=\"font-weight-bold\"> <b>All information is used only to help clients and listeners to better and faster match. EmpowerChange will not disclose any private information without the user's written consent. </b></p>\r\n                <p class=\"text-danger\">Note: This platform is not intended for use by students with suicidal tendencies/plans. </p>\r\n                <p class=\"font-weight-bold\"> <b>If you have suicidal tendencies or plans, please call the Good2Talk hotline <a href=\"tel:1-866-925-5454\">+1-866-925-5454</a></b></p>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label><b>Want to be matched with a listener from which school?</b></Form.Label>\r\n                        <Form.Select required=\"true\" value={this.state.matchUni} onChange={this.updateInputMatchUni}>\r\n\r\n                            <option value=\"University of Toronto\">University of Toronto</option>\r\n                            <option value=\"Western University\">Western University</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label><b>Which topics you want to talk about?</b></Form.Label>\r\n                        <p>(For each session, please select one topic you want to focus on. If necessary, you can check other topics in the next listening session. This information will be provided to the listener.)</p>\r\n                        <Form.Select value={this.state.topic} onChange={this.updateInputTopic}>\r\n                            <option value=\"Other\">Other</option>\r\n                            <option value=\"Family Relationship\">Family Relationship</option>\r\n                            <option value=\"Romantic Relationship\">Romantic Relationship</option>\r\n                            <option value=\"Friendship\">Friendship </option>\r\n                            <option value=\"Academic Planning\">Academic Planning </option>\r\n                            <option value=\"Career Planning\">Career Planning</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label><b>If you choose “Others” for the above question, please enter the topic here. </b></Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.extra_topic} onChange={this.updateInputExtraTopic} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label><b>What is your main need for this listening session</b></Form.Label>\r\n                        {['checkbox'].map((type) => (\r\n                        <div key={`default-${type}`} className=\"mb-3\">\r\n                            <Form.Check\r\n                            Want to be heard\r\n                            type={type}\r\n                            id={1}\r\n                            label={\"Want to be heard\"}\r\n                            value={this.state.need}\r\n                            onChange={this.updateInputNeed}\r\n                            />\r\n\r\n                            <Form.Check\r\n                            Want to work with the listener to find solutions to problems\r\n                            type={type}\r\n                            label={\"Want to work with the listener to find solutions to problems\"}\r\n                            id={2}\r\n                            value={this.state.need}\r\n                            onChange={this.updateInputNeed}\r\n                            />\r\n\r\n                            <Form.Check\r\n                            Others\r\n                            type={type}\r\n                            label={\"Others\"}\r\n                            id={3}\r\n                            value={this.state.need}\r\n                            onChange={this.updateInputNeed}\r\n                            />\r\n                        </div>\r\n                        ))}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label><b>If you choose “Others” for the above question, please enter the topic here. </b></Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.extra_need} onChange={this.updateInputExtraTopic} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>What is your current mental state?</b></Form.Label>\r\n            <p>(This information will be provided to the listener.)</p>\r\n\r\n            <Form.Select value={this.state.condition} onChange={this.updateInputCondition}>\r\n              <option value=\"1\">Excellent, want to share happy mood</option>\r\n              <option value=\"2\">Everything is normal, but sometimes I am lazy and can't get motivated, a little confused and anxious</option>\r\n              <option value=\"3\">Not so good, just experienced some setbacks, emotional instability</option>\r\n              <option value=\"4\">In a state of extreme depression and anxiety, need to see a psychiatrist</option>\r\n              <option value=\"5\">Already saw a psychiatrist, trying to get better relief from symptoms</option>\r\n              <option value=\"6\">Have occasional suicidal tendencies</option>\r\n              <option value=\"7\">Others</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If you choose “Others” for the above question, please enter your mental state here.</b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.extra_condition} onChange={this.updateInputExtraCondition} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label><b>If you want to leave any messages for listeners, please fill it here.</b></Form.Label>\r\n            <p>(A brief description of the situation will better help the listener understand the your current situation so that they can better prepare for the listening, so we suggest filling it out.)</p>\r\n            <Form.Control as=\"textarea\" rows={3} value={this.state.other_info} onChange={this.updateInputOtherInfo} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>If this is not your first time coming, please fill in the date of your last session and the name of the listener (format: date - listener's name)</b></Form.Label> <br></br>\r\n            <Form.Control type=\"text\" value={this.state.last_match_info} onChange={this.updateInputLastMatchInfo} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>How did you find out about the EmpowerCHANGE or the listening program?</b></Form.Label>\r\n            {['checkbox'].map((type) => (\r\n              <div key={`default-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  WeChat tweets and Public\r\n                  type={type}\r\n                  id={`default-${type}`}\r\n                  label={\"WeChat tweets / Public\"}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Friend introduction\r\n                  type={type}\r\n                  label={\"Friend's introduction\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Offline event or seminar\r\n                  type={type}\r\n                  label={\"Offline event or seminar\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Google searching\r\n                  type={type}\r\n                  label={\"Google searching\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Others\r\n                  type={type}\r\n                  label={\"Others\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Form.Group>\r\n\r\n          <br></br>\r\n          <p class=\"font-weight-bold text-danger\">\r\n            <b>\r\n              Dear Bel ringer, the system will send you a confirmation email in 15 mintues through empowerchange.peerlistener@gmail.com\r\n              to confirm your personal information and schedule details.\r\n              The listener will send you messages and group chat QR code 10 minutes ahead of the meeting.\r\n              Please check your email 10 minutes before the scheduled meeting time.\r\n            </b>\r\n          </p>\r\n\r\n                    {/* <p>线上倾听将会在微信中进行。</p> */}\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" >\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BookingInfo;\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Card, Modal, Button, Row, Col } from \"react-bootstrap\";\r\n\r\n\r\nimport \"../../styles/ListenerCard.css\";\r\nimport \"../../styles/ListenerInfoPopup.css\";\r\n\r\nconst ListenerCard = (props) => {\r\n  const { name, intro, photo, details } = props.listenerInfo;\r\n  const [popup, setPopup] = useState(false);\r\n\r\n  const cardClickHandler = (name) => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const popupCloseHandler = () => {\r\n    setPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"galary-card-container\">\r\n      <div className=\"card galary-card\" onClick={() => cardClickHandler(name)}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          <p className=\"card-text\">{intro}</p>\r\n        </div>\r\n        <img src={photo} className=\"card-img-top\" alt=\"listener_photo\" />\r\n      </div>\r\n\r\n      <Modal\r\n        show={popup}\r\n        onHide={popupCloseHandler}\r\n        className=\"listenerInfoPopup-modal\"\r\n        backdrop=\"static\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{name}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body className=\"listenerInfoPopup-body\">\r\n          <Row>\r\n            <Col xs={6} md={3}>\r\n            <img src={photo} className=\"card-img-top\" alt=\"photo\" />\r\n            </Col>\r\n            <Col xs={12} md={9}>\r\n              {details.map((detail) => {\r\n                return (\r\n                  <div>\r\n                    <h6>{detail.heading}</h6>\r\n\r\n                    {detail.contents.map((content) => {\r\n                      return <p>{content}</p>;\r\n                    })}\r\n                  </div>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListenerCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ListenerCard from \"./ListenerCard\";\r\n// import { listenerData } from \"./_listenerData\";\r\n\r\nvar ListenerData = require(\"./_listenerData.json\");\r\n\r\n\r\nconst Galary = () => {\r\n  return (\r\n    <div className=\"row -row-cols-3 g-3 home-p-container\" id=\"galary-container\">\r\n    <h1>Our Listeners</h1>\r\n      {ListenerData.map((listener) => (\r\n        <div className=\"col-sm-12 col-lg-4\" key={listener.name} >\r\n          <ListenerCard\r\n            listenerInfo={listener}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Galary;\r\n","import React from \"react\";\r\nimport { Button, Badge, Image } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nlet _organizationIntroData = require(\"./_introData.json\");\r\nconst IntroData = _organizationIntroData[0];\r\n\r\nexport const HomeSection_1 = () => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <h1 className=\"home-head-1\">{IntroData.website_heading}</h1>\r\n      <h1 className=\"home-subhead-1\">{IntroData.website_subheading}</h1>\r\n      <Badge\r\n        pill\r\n        className=\"home-button-1\"\r\n        onClick={(event) => (window.location.href = \"/UserInfo\")}\r\n        variant=\"outline-primary\"\r\n      >\r\n        START\r\n      </Badge>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomeSection_2 = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"home-head-2\">WHO ARE WE?</h1>\r\n      <h1 className=\"home-subhead-2\">Our story</h1>\r\n      <div className=\"home-p-container\">\r\n        <p className=\"home-p-1\">{IntroData.our_story_p1}</p>\r\n        <p className=\"home-p-1\">{IntroData.our_story_p2}</p>\r\n        <p className=\"home-p-1\">{IntroData.our_story_p3}</p>\r\n        <p className=\"home-p-1\">{IntroData.our_story_p4}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomeSection_3 = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"home-head-3\">OUR SERVICE</h1>\r\n      <h1 className=\"home-head-3 home-subhead-3\">\r\n        <FontAwesomeIcon icon={[\"far\", \"star\"]} />\r\n      </h1>\r\n      <div className=\"home-p-container\">\r\n        <p className=\"home-p-1\">{IntroData.service_intro}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomeSection_4 = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"home-head-4\">OUR CORE VALUES</h1>\r\n      <div className=\"home-p-container\">\r\n        <p className=\"home-p-1\">{IntroData.core_values}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Redirect, Component } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Badge, Image } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../styles/Home.css\"\r\nimport \"../styles/Galary.css\"\r\nimport Galary from '../components/Galary/Galary.jsx';\r\nimport { HomeSection_1, HomeSection_2, HomeSection_3, HomeSection_4 } from '../components/HomeSections/HomeSections';\r\n// import HomeSection_2 from '../components/HomeSections/HomeSection_2';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.galary_ref = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { position } = this.props.match.params;\r\n        if (position === \"Galary\") {\r\n            this.galary_ref.current.scrollIntoView()\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"homeblock-container\">\r\n\r\n                    <div className=\"homeblock homeblock-1\">\r\n                        <HomeSection_1 />\r\n                    </div>\r\n\r\n                    {/* <div className=\"homeblock homeblock-2\">\r\n                        <HomeSection_2 />\r\n                    </div> */}\r\n\r\n                    <div className=\"homeblock homeblock-3\">\r\n                        <HomeSection_3 />\r\n                    </div>\r\n\r\n                    <div className=\"homeblock homeblock-4\">\r\n                        <HomeSection_4 />\r\n                    </div>\r\n\r\n                    <div className=\"homeblock homeblock-3\" id=\"galary-block\" ref={this.galary_ref}>\r\n                        <Galary />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { Card, Modal, Button, Row, Col } from \"react-bootstrap\";\r\n\r\n\r\n// import \"../../styles/ListenerCard.css\";\r\n// import \"../../styles/ListenerInfoPopup.css\";\r\n\r\nconst TeamCard = (props) => {\r\n  const { name, intro, photo, details } = props.teamInfo;\r\n  const [popup, setPopup] = useState(false);\r\n\r\n  const cardClickHandler = (name) => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const popupCloseHandler = () => {\r\n    setPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"galary-card-container\">\r\n      <div className=\"card galary-card\" onClick={() => cardClickHandler(name)}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          <p className=\"card-text\">{intro}</p>\r\n        </div>\r\n        <img src={photo} className=\"card-img-top\" alt=\"team_member_photo\" />\r\n      </div>\r\n\r\n      <Modal\r\n        show={popup}\r\n        onHide={popupCloseHandler}\r\n        className=\"listenerInfoPopup-modal\"\r\n        backdrop=\"static\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{name}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body className=\"listenerInfoPopup-body\">\r\n          <Row>\r\n            <Col xs={6} md={5}>\r\n            <img src={photo} className=\"card-img-top\" alt=\"photo\" />\r\n            </Col>\r\n            <Col xs={12} md={7}>\r\n              {details.map((detail) => {\r\n                return (\r\n                  <div>\r\n                    <h6>{detail.heading}</h6>\r\n\r\n                    {detail.contents.map((content) => {\r\n                      return <p>{content}</p>;\r\n                    })}\r\n                  </div>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport TeamCard from \"./TeamCard\";\r\n// import { listenerData } from \"./_listenerData\";\r\n\r\nvar TeamData = require(\"./_teamData.json\");\r\n\r\n\r\nconst Galary = () => {\r\n  return (\r\n    <div className=\"row -row-cols-3 g-3 home-p-container\" id=\"galary-container\">\r\n      {TeamData.map((member) => (\r\n        <div className=\"col-sm-12 col-lg-4\" key={member.name} >\r\n          <TeamCard\r\n            teamInfo={member}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Galary;\r\n","import React, { Redirect, Component } from 'react';\r\nimport \"../styles/About.css\"\r\nimport \"../styles/Home.css\"\r\nimport \"../styles/Galary.css\"\r\nimport AboutGalary from '../components/AboutSections/AboutGalary.jsx';\r\nimport { HomeSection_2} from '../components/HomeSections/HomeSections';\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // this.galary_ref = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { position } = this.props.match.params;\r\n        // if (position === \"Galary\") {\r\n        //     this.galary_ref.current.scrollIntoView()\r\n        // };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (    \r\n            <div className=\"homeblock-container\">\r\n                <div className=\"homeblock homeblock-3\" id=\"galary-block\" >\r\n                    <div className=\"homeblock homeblock-2\">\r\n                        <HomeSection_2 />\r\n                    </div>\r\n                    <div className=\"bottom-block\">\r\n                        <h1 className=\"team-head-1\">Our Team</h1>\r\n                        <AboutGalary />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"../styles/Disclaimer.css\";\r\n\r\nclass Disclaimer extends Component {\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(\"after print state\");\r\n    // redirect to calender\r\n    this.props.history.push('/Calendar');\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n   return (\r\n     <div> \r\n     \r\n    <Form onSubmit={this.handleSubmit} className=\"disclaimer-form\">\r\n\r\n    <p> <b>Information and privacy protection norms: </b> </p>\r\n      <ol> \r\n        <i>\r\n          <li>Record of the information and words of the clients' generated during the listening session, including but not limited to audio, video, photo, and chat records, will not be disclosed to any third party in any form. Notes taken during the listening session will be destroyed upon the conclusion of the listening session. </li>\r\n          <li>The client must respect the listener's privacy and must not relay, disclose, or publicly release to any third party the listener's personal information, privacy, or personal experiences mentioned during the listening session.</li>\r\n          <li>The client must respect the listener. If the client violates this Code during the listening session (e.g., display intention or conduct of malicious attacks or verbal abuse to the listener), the listener has the right to stop the session immediately.</li>\r\n          <li>The Listener and all members of the Listener Platform will not disclose personally identifiable information about the client in any way or on any occasion.</li>\r\n          <li>The Platform shall not relay, disclose, or publicly release to any third party, in whole or in part, the personal information, privacy, and personal experiences of the Platform users mentioned above.</li>\r\n          <li>Exceptions to the confidentiality agreement: If the client disclose any intention or plan that may endanger self or other people, or otherwise involve illegal behavior during the listening session, the listener has the right to feedback the client's statement to the public security authorities.</li>\r\n          \r\n        </i>\r\n      </ol>\r\n      \r\n      <p class=\"text-danger\"> <b>Disclaimer</b></p>\r\n      <p class=\"font-weight-bold\">\r\n         <i>\r\n        <li>The platform is not responsible for the listener's behavior, speech, or any related extended areas of the listening process.</li>\r\n        <li>After the end of the listening session, the relationship between the listener and the client will be terminated and the platform will not assume any responsibility or liability for any private or unilateral agreement between the listener and the client.</li>\r\n        </i>\r\n      </p>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        I have read and accept the terms and conditions, including user notice and disclaimer\r\n      </Button>\r\n    </Form>\r\n    </div>\r\n   ); \r\n  }\r\n\r\n}\r\n\r\nexport default Disclaimer;\r\n\r\n\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nconst FormInput = ({\r\n  lable,\r\n  name,\r\n  isAutoFocus,\r\n  error,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{lable}</label>\r\n      {error && (\r\n        <span className=\"form-error-badge\">\r\n          <FontAwesomeIcon icon={[\"fa\", \"times-circle\"]} />\r\n        </span>\r\n      )}\r\n      <input\r\n        {...rest}\r\n        autoFocus={isAutoFocus}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;","import { Component } from 'react'\r\nimport FormInput from './FormInput'\r\n// import FormDropdown from \"./formDropdown\";\r\n// import FormDatePicker from \"./formDatepicker\";\r\nimport './Form.css'\r\n\r\nconst Joi = require('joi');\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  }\r\n\r\n  LoginSchema = Joi.object({\r\n    email: Joi.string(),\r\n    password: Joi.string(),\r\n  })\r\n\r\n  RegisterSchema = Joi.object({\r\n    email: Joi.string(),\r\n    password: Joi.string(),\r\n  })\r\n\r\n  Schema = (this.props.formType===\"login\" ? this.LoginSchema : this.RegisterSchema);\r\n\r\n\r\n  validate = () => {\r\n    const { error } = this.Schema.validate(this.state.data);\r\n    let errors = {}\r\n    if (error) error.details.map((e) => (errors[e.path] = e.message))\r\n    return errors\r\n  }\r\n\r\n  validateChange = (targetName, targetValue) => {\r\n    const errors = { ...this.state.errors }\r\n    const { error } = this.Schema.validate({ [targetName]: targetValue })\r\n    error\r\n      ? (errors[targetName] = error.details[0].message)\r\n      : delete errors[targetName]\r\n    return errors\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const errors = this.validate()\r\n    this.setState({ errors })\r\n    if (Object.keys(errors).length) return\r\n    this.doSubmit()\r\n  }\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data }\r\n    data[input.name] = input.value\r\n    this.setState({ data })\r\n    this.setState({ errors: this.validateChange(input.name, input.value) })\r\n  }\r\n\r\n  renderInput(name, lable, placeholder, isAutoFocus = false, type = 'text') {\r\n    const { data, errors } = this.state\r\n    return (\r\n      <FormInput\r\n        type={type}\r\n        isAutoFocus={isAutoFocus}\r\n        lable={lable}\r\n        value={data[name]}\r\n        name={name}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        placeholder={placeholder}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderSubmitBtn(lable) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <button\r\n          disabled={Object.keys(this.validate()).length !== 0}\r\n          className=\"btn btn-dark form-submit-btn\"\r\n        >\r\n          {lable}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component, Fragment } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Form from '../common_components/Form'\r\nimport './Login.css'\r\n\r\nconst Joi = require('joi')\r\nconst loginURL = 'https://ringbell-api.herokuapp.com/api/v1/users/login'\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: { email: '', password: '' },\r\n    errors: {},\r\n  }\r\n\r\n  storeLoginSession = async (token) => {\r\n    await axios\r\n      .get(loginURL, { params: { token: token } })\r\n      .then((response) => {\r\n        alert('Get info successful!')\r\n        const userInfo = response.data.data ? response.data.data : ''\r\n        window.sessionStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n        console.log(window.sessionStorage.getItem('userInfo'))\r\n        this.toHomePage()\r\n      })\r\n      .catch((error) => {\r\n        alert('Login expired, trying again')\r\n      })\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    // call server\r\n    await axios\r\n      .post(loginURL, {\r\n        email: this.state.data.email,\r\n        password: this.state.data.password,\r\n      })\r\n      .then((response) => {\r\n        alert('Login successful!')\r\n        console.log(response.data.data)\r\n        this.storeLoginSession(response.data.data)\r\n      })\r\n      .catch((error) => {\r\n        const statusCode = error.response.status\r\n        console.log(statusCode)\r\n        switch (statusCode) {\r\n          case 401:\r\n            alert('Invalid password.')\r\n            break\r\n          case 404:\r\n            alert('User not found.')\r\n            break\r\n          case 408:\r\n            console.log(\"Timeout ignored.\")\r\n            break\r\n          default:\r\n            alert(error)\r\n        }\r\n      })\r\n  }\r\n\r\n  toRegisterPage = () => {\r\n    this.props.history.push('/Register')\r\n  }\r\n\r\n  toHomePage = () => {\r\n    this.props.history.push('/')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <form onSubmit={this.handleSubmit} className=\"form\" formType=\"login\">\r\n          <h1>Login</h1>\r\n          {this.renderInput('email', 'Email', '', true)}\r\n          {this.renderInput('password', 'Password')}\r\n          {this.renderSubmitBtn('Login')}\r\n          <button onClick={this.toRegisterPage} className=\"btn register-button\">\r\n            New User\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios'\r\nimport \"./Userinfo.css\";\r\n\r\nconst Joi = require('joi');\r\nconst registerURL = 'https://ringbell-api.herokuapp.com/api/v1/users'\r\n\r\n\r\nclass RegisterInfo extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    university: '',\r\n    WID: '',\r\n    gender: '',\r\n    faculty: '',\r\n    availability: '',\r\n    password: '',\r\n    errors: {}\r\n  }\r\n\r\n  updateInputName = (e) => {\r\n    // console.log(e);\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputUniversity = (e) => {\r\n    // console.log(e);\r\n    this.setState({\r\n      university: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputPassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputWechat = (e) => {\r\n    this.setState({\r\n      WID: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputGender = (e) => {\r\n    this.setState({\r\n      gender: e.target.value\r\n    });\r\n  }\r\n\r\n  updateInputFaculty = (e) => {\r\n    this.setState({\r\n      faculty: e.target.value\r\n    });\r\n  }\r\n\r\n  createUser = async () => {\r\n    await axios\r\n      .post(registerURL, {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        info: {\r\n          ...this.state\r\n        }\r\n      })\r\n      .then((response) => {\r\n        alert('Registration successful!')\r\n        console.log(response)\r\n        this.storeLoginSession(response.data.data)\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.createUser();\r\n\r\n    this.props.history.push('/RegisterSuccess');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"left\">\r\n          <img class=\"left-logo\" src=\"./logo.png\" alt=\"EmpowerChange Logo\"></img>\r\n          <p class=\"left-text\"> <b>LinkedIn: <a href=\"https://www.linkedin.com/company/listeners/\">EmpowerChange</a></b></p>\r\n          <p class=\"left-text\"> <b>Instagram: <a href=\"https://www.instagram.com/empowerchange_uoft/?hl=en\">empowerchange_uoft</a></b></p>\r\n          <p class=\"left-text\"> <b>Email: contact.listener@gmail.com</b></p>\r\n        </div>\r\n\r\n\r\n\r\n        <Form onSubmit={this.handleSubmit} className=\"userinfo-form\" class=\"right\">\r\n\r\n          <h3 class=\"info-form_heading\">New User Register</h3>\r\n          <h3 class=\"info-form_heading text-danger\">IMPORTANT INFORMATION</h3>\r\n\r\n          <p class=\"font-weight-bold\"> <b>All information is used only to help clients and listeners to better and faster match. EmpowerChange will not disclose any private information without the user's written consent. </b></p>\r\n          <p class=\"text-danger\">Note: This platform is not intended for use by students with suicidal tendencies/plans. </p>\r\n          <p class=\"font-weight-bold\"> <b>If you have suicidal tendencies or plans, please call the Good2Talk hotline <a href=\"tel:1-866-925-5454\">+1-866-925-5454</a></b></p>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n            <Form.Label><b>Name </b><span className=\"text-muted\">(必填)</span></Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.name} onChange={this.updateInputName} />\r\n            <Form.Text className=\"text-muted\">\r\n            (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n            <Form.Label><b>Your School</b></Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.university} onChange={this.updateInputUniversity} />\r\n            <Form.Text className=\"text-muted\">\r\n            (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>Email</b><span className=\"text-muted\">(*Required)</span></Form.Label>\r\n            <Form.Control required=\"true\" type=\"email\" value={this.state.email} onChange={this.updateInputEmail} />\r\n            <Form.Text className=\"text-muted\">\r\n            Please make sure the email is entered correctly as confirmation email will be sent to your email address.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n            <Form.Label><b>Password </b><span className=\"text-muted\">(*Required)</span></Form.Label>\r\n            <Form.Control required=\"true\" type=\"text\" value={this.state.password} onChange={this.updateInputPassword} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n            <Form.Label><b>Wechat ID</b></Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.WID} onChange={this.updateInputWechat} />\r\n            <Form.Text className=\"text-muted\">\r\n             (This information will be provided to the listener.)\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n            <Form.Label><b>Gender</b></Form.Label>\r\n            <Form.Select value={this.state.gender} onChange={this.updateInputGender}>\r\n\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Male\">Female</option>\r\n              <option value=\"Non-binary\">Non-binary</option>\r\n\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n            <Form.Label><b>What is your major?</b></Form.Label> <br></br>\r\n            <Form.Label>(*For Academic/Career session, Please fill out this field and the information will be used to assist in matching listeners.)</Form.Label>\r\n            <Form.Control type=\"text\" value={this.state.faculty} onChange={this.updateInputFaculty} />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label><b>How did you find out about the EmpowerCHANGE or the listening program?</b></Form.Label>\r\n            {['checkbox'].map((type) => (\r\n              <div key={`default-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  WeChat tweets and Public\r\n                  type={type}\r\n                  id={`default-${type}`}\r\n                  label={\"WeChat tweets / Public\"}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Friend introduction\r\n                  type={type}\r\n                  label={\"Friend's introduction\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Offline event or seminar\r\n                  type={type}\r\n                  label={\"Offline event or seminar\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Google searching\r\n                  type={type}\r\n                  label={\"Google searching\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n\r\n                <Form.Check\r\n                  Others\r\n                  type={type}\r\n                  label={\"Others\"}\r\n                  id={`default-${type}`}\r\n                  value={this.state.source}\r\n                  onChange={this.updateInputSource}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Form.Group>\r\n\r\n          <br></br>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RegisterInfo;\r\n\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Form from '../common_components/Form'\r\nimport './Login.css'\r\n\r\nconst Joi = require('joi')\r\nconst loginURL = 'https://ringbell-api.herokuapp.com/api/v1/users/login'\r\n\r\nclass RegisterSuccess extends Form {\r\n  state = {\r\n    data: { username: '', password: '' },\r\n    errors: {},\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"form\">\r\n          <h3 className=\"form-mov\">Registration success！</h3>\r\n          {/* <p className=\"form-mov text-muted\">Confirmation has been sent to your email.</p> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterSuccess\r\n","import './App.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NavBar from \"./components/common_components/Navbar.jsx\";\r\n\r\n// Pages\r\n// import Main from './pages/Main'\r\n// import UserInfo from './pages/UserInfo'\r\nimport Calendar from './pages/Calendar'\r\nimport UserInfo from './components/UserInfoForms/UserInfo'\r\nimport BookingInfo from './components/UserInfoForms/BookingInfo'\r\n\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport Disclaimer from './pages/Disclaimer';\r\nimport Login from './components/Authentication/Login';\r\nimport RegisterInfo from './components/UserInfoForms/RegisterInfo';\r\nimport RegisterSuccess from './components/Authentication/RegisterSuccess';\r\n\r\n\r\nconst renderBookingRoute = () => {\r\n  return (window.sessionStorage.getItem('userInfo')\r\n    ? <Route path=\"/UserInfo\" component={BookingInfo} />\r\n    : <Route path=\"/UserInfo\" component={UserInfo} />);\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"\">\r\n          <NavBar />\r\n          <Switch>\r\n            {renderBookingRoute()}\r\n            <Route path=\"/Calendar\" component={Calendar} />\r\n            <Route path=\"/About\" component={About} />\r\n            <Route path=\"/Disclaimer\" component={Disclaimer} />\r\n            <Route path=\"/Login\" component={Login} />\r\n            <Route path=\"/Register\" component={RegisterInfo} />\r\n            <Route path=\"/RegisterSuccess\" component={RegisterSuccess} />\r\n            <Route path=\"/:position\" component={Home} />\r\n            <Route path=\"/\" component={Home} />\r\n            {/* <Calendar/> */}\r\n          </Switch>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// fontawsome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nlibrary.add(far, fas, fab);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}